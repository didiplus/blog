import{ab as u,G as d,H as m,E as e,S as n,N as s,ac as t,ad as k,W as l}from"./framework-b31a425c.js";const b={},h=e("h1",{id:"_2-1、部署一个应用程序",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-1、部署一个应用程序","aria-hidden":"true"},"#"),n(" 2.1、部署一个应用程序")],-1),g={href:"https://kubernetes.io/docs/tutorials/kubernetes-basics/deploy-app/deploy-intro/",target:"_blank",rel:"noopener noreferrer"},_=e("h3",{id:"前提",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#前提","aria-hidden":"true"},"#"),n(" 前提")],-1),y=e("p",null,"假设您已经",-1),v=e("h3",{id:"目标",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#目标","aria-hidden":"true"},"#"),n(" 目标")],-1),x=e("ul",null,[e("li",null,"使用 kubectl 在 k8s 上部署第一个应用程序。")],-1),D={class:"hint-container tip"},f=e("p",{class:"hint-container-title"},"提示",-1),P=e("li",null,"kubectl 是 k8s 的客户端工具，可以使用命令行管理集群。",-1),K=k('<h3 id="kubernetes-部署" tabindex="-1"><a class="header-anchor" href="#kubernetes-部署" aria-hidden="true">#</a> Kubernetes 部署</h3><p>在 k8s 上进行部署前，首先需要了解一个基本概念 <strong>Deployment</strong></p><p><strong>Deployment</strong> 译名为 <strong>部署</strong>。在k8s中，通过发布 Deployment，可以创建应用程序 (docker image) 的实例 (docker container)，这个实例会被包含在称为 <strong>Pod</strong> 的概念中，<strong>Pod</strong> 是 k8s 中最小可管理单元。</p><p>在 k8s 集群中发布 Deployment 后，Deployment 将指示 k8s 如何创建和更新应用程序的实例，master 节点将应用程序实例调度到集群中的具体的节点上。</p><p>创建应用程序实例后，<strong>Kubernetes Deployment Controller</strong> 会持续监控这些实例。如果运行实例的 worker 节点关机或被删除，则 Kubernetes Deployment Controller 将在群集中资源最优的另一个 worker 节点上重新创建一个新的实例。<strong>这提供了一种自我修复机制来解决机器故障或维护问题。</strong></p><p>在容器编排之前的时代，各种安装脚本通常用于启动应用程序，但是不能够使应用程序从机器故障中恢复。通过创建应用程序实例并确保它们在集群节点中的运行实例个数，Kubernetes Deployment 提供了一种完全不同的方式来管理应用程序。</p><h2 id="在-kubernetes-上部署第一个应用程序" tabindex="-1"><a class="header-anchor" href="#在-kubernetes-上部署第一个应用程序" aria-hidden="true">#</a> 在 Kubernetes 上部署第一个应用程序</h2><figure><img src="https://kuboard.cn/assets/img/module_02_first_app.25e902c4.svg" alt="Kubernetes教程：部署第一个应用程序" tabindex="0" loading="lazy"><figcaption>Kubernetes教程：部署第一个应用程序</figcaption></figure><p>上图是在第一篇文章的基础上，添加上了Deployment、Pod和Container。</p><p>Deployment 处于 master 节点上，通过发布 Deployment，master 节点会选择合适的 worker 节点创建 Container（即图中的正方体），Container 会被包含在 Pod （即蓝色圆圈）里。</p><h2 id="实战-部署-nginx-deployment" tabindex="-1"><a class="header-anchor" href="#实战-部署-nginx-deployment" aria-hidden="true">#</a> 实战：部署 nginx Deployment</h2><p>本套教程提供了两种实战方式：</p><ul><li>使用 kubectl</li><li>使用 命令行方式</li></ul>',13),C=e("p",null,"创建文件 nginx-deployment.yaml，内容如下：",-1),N=e("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[e("pre",{class:"language-yaml"},[e("code",null,[e("span",{class:"token key atrule"},"apiVersion"),e("span",{class:"token punctuation"},":"),n(" apps/v1	"),e("span",{class:"token comment"},"#与k8s集群版本有关，使用 kubectl api-versions 即可查看当前集群支持的版本"),n(`
`),e("span",{class:"token key atrule"},"kind"),e("span",{class:"token punctuation"},":"),n(" Deployment	"),e("span",{class:"token comment"},"#该配置的类型，我们使用的是 Deployment"),n(`
`),e("span",{class:"token key atrule"},"metadata"),e("span",{class:"token punctuation"},":"),n("	        "),e("span",{class:"token comment"},"#译名为元数据，即 Deployment 的一些基本属性和信息"),n(`
  `),e("span",{class:"token key atrule"},"name"),e("span",{class:"token punctuation"},":"),n(" nginx"),e("span",{class:"token punctuation"},"-"),n("deployment	"),e("span",{class:"token comment"},"#Deployment 的名称"),n(`
  `),e("span",{class:"token key atrule"},"labels"),e("span",{class:"token punctuation"},":"),n("	    "),e("span",{class:"token comment"},"#标签，可以灵活定位一个或多个资源，其中key和value均可自定义，可以定义多组，目前不需要理解"),n(`
    `),e("span",{class:"token key atrule"},"app"),e("span",{class:"token punctuation"},":"),n(" nginx	"),e("span",{class:"token comment"},"#为该Deployment设置key为app，value为nginx的标签"),n(`
`),e("span",{class:"token key atrule"},"spec"),e("span",{class:"token punctuation"},":"),n("	        "),e("span",{class:"token comment"},"#这是关于该Deployment的描述，可以理解为你期待该Deployment在k8s中如何使用"),n(`
  `),e("span",{class:"token key atrule"},"replicas"),e("span",{class:"token punctuation"},":"),n(),e("span",{class:"token number"},"1"),n("	"),e("span",{class:"token comment"},"#使用该Deployment创建一个应用程序实例"),n(`
  `),e("span",{class:"token key atrule"},"selector"),e("span",{class:"token punctuation"},":"),n("	    "),e("span",{class:"token comment"},"#标签选择器，与上面的标签共同作用，目前不需要理解"),n(`
    `),e("span",{class:"token key atrule"},"matchLabels"),e("span",{class:"token punctuation"},":"),n(),e("span",{class:"token comment"},"#选择包含标签app:nginx的资源"),n(`
      `),e("span",{class:"token key atrule"},"app"),e("span",{class:"token punctuation"},":"),n(` nginx
  `),e("span",{class:"token key atrule"},"template"),e("span",{class:"token punctuation"},":"),n("	    "),e("span",{class:"token comment"},"#这是选择或创建的Pod的模板"),n(`
    `),e("span",{class:"token key atrule"},"metadata"),e("span",{class:"token punctuation"},":"),n("	"),e("span",{class:"token comment"},"#Pod的元数据"),n(`
      `),e("span",{class:"token key atrule"},"labels"),e("span",{class:"token punctuation"},":"),n("	"),e("span",{class:"token comment"},"#Pod的标签，上面的selector即选择包含标签app:nginx的Pod"),n(`
        `),e("span",{class:"token key atrule"},"app"),e("span",{class:"token punctuation"},":"),n(` nginx
    `),e("span",{class:"token key atrule"},"spec"),e("span",{class:"token punctuation"},":"),n("	    "),e("span",{class:"token comment"},"#期望Pod实现的功能（即在pod中部署）"),n(`
      `),e("span",{class:"token key atrule"},"containers"),e("span",{class:"token punctuation"},":"),n("	"),e("span",{class:"token comment"},"#生成container，与docker中的container是同一种"),n(`
      `),e("span",{class:"token punctuation"},"-"),n(),e("span",{class:"token key atrule"},"name"),e("span",{class:"token punctuation"},":"),n(" nginx	"),e("span",{class:"token comment"},"#container的名称"),n(`
        `),e("span",{class:"token key atrule"},"image"),e("span",{class:"token punctuation"},":"),n(" nginx"),e("span",{class:"token punctuation"},":"),n("1.7.9	"),e("span",{class:"token comment"},"#使用镜像nginx:1.7.9创建container，该container默认80端口可访问"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),L=e("p",null,[e("strong",null,"应用 YAML 文件")],-1),V=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("kubectl apply "),e("span",{class:"token parameter variable"},"-f"),n(` nginx-deployment.yaml
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),w=e("p",null,[e("strong",null,"查看部署结果")],-1),A=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# 查看 Deployment"),n(`
kubectl get deployments

`),e("span",{class:"token comment"},"# 查看 Pod"),n(`
kubectl get pods
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),E=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# create nginx Deployment"),n(`
kubectl create deployment nginx `),e("span",{class:"token parameter variable"},"--image"),e("span",{class:"token operator"},"="),n("nginx "),e("span",{class:"token parameter variable"},"--replicas"),e("span",{class:"token operator"},"="),e("span",{class:"token number"},"3"),n(` 
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),B=e("p",null,[e("strong",null,"查看部署结果")],-1),T=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# 查看 Deployment"),n(`
kubectl get deployments

`),e("span",{class:"token comment"},"# 查看 Pod"),n(`
kubectl get pods
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),I=e("p",null,[n("可分别查看到一个名为 nginx-deployment 的 Deployment 和一个名为 "),e("strong",null,"nginx-deployment-xxxxxxx"),n("的Pod")],-1),R=e("p",null,"~~任务二达成，至此你已经成功在k8s上部署了一个实例的nginx应用程序，",-1),S=e("p",null,"~~想要知道 Deployment（部署）、Pod（容器组） 和 Node(节点) 之间的关系吗？",-1);function z(G,H){const o=l("ExternalLinkIcon"),a=l("RouterLink"),c=l("Tabs");return d(),m("div",null,[h,e("p",null,[n("本文翻译自 Kubernetes "),e("a",g,[n("Using kubectl to Create a Deployment"),s(o)]),n(" ，并有所改写")]),_,y,e("ul",null,[e("li",null,[n("完成 Kubernetes 集群的安装，请参考文档 "),s(a,{to:"/cloud/k8s/install/install-k8s.html"},{default:t(()=>[n("离线安装高可用的Kubernetes集群")]),_:1})])]),v,x,e("div",D,[f,e("ul",null,[P,e("li",null,[n("如果参考文档 "),s(a,{to:"/cloud/k8s/install/install-k8s.html"},{default:t(()=>[n("离线安装高可用的Kubernetes集群")]),_:1}),n("，您可以在 master 节点的 root 用户使用 kubectl 操作您的集群")]),e("li",null,[n("您也可以尝试 "),s(a,{to:"/cloud/k8s/install/install-kubernetes.html"},{default:t(()=>[n("从客户端电脑远程管理 Kubernetes")]),_:1})])])]),K,s(c,{id:"96",data:[{title:"使用kubectl"},{title:"使用命令行方式创建"}],active:0},{tab0:t(({title:i,value:r,isActive:p})=>[C,N,L,V,w,A]),tab1:t(({title:i,value:r,isActive:p})=>[E,B,T]),_:1}),I,R,S,e("p",null,[n("~~let‘s go-> "),s(a,{to:"/cloud/k8s/k8s-basics/explore.html"},{default:t(()=>[n("查看 Pods（容器组）和 Nodes（节点）")]),_:1})])])}const U=u(b,[["render",z],["__file","deploy-app.html.vue"]]);export{U as default};
