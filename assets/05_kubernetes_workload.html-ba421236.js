import{ab as n,G as s,H as a,ad as e}from"./framework-894cff3a.js";const l={},t=e(`<h1 id="云原生第5课-kubernetes工作负载管理" tabindex="-1"><a class="header-anchor" href="#云原生第5课-kubernetes工作负载管理" aria-hidden="true">#</a> 云原生第5课：Kubernetes工作负载管理</h1><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>本篇文章来自《华为云云原生王者之路训练营》黄金系列课程第5课，由华为云容器技术专家Jessia Ding主讲，帮你了解工作负载的概念以及Kubernetes提供的内置工作负载的信息；Deployment/ DaemonSet/ Job/ CronJob概念以及使用场景。</p></div><h2 id="kubernetes-工作负载-workload-介绍" tabindex="-1"><a class="header-anchor" href="#kubernetes-工作负载-workload-介绍" aria-hidden="true">#</a> Kubernetes 工作负载（Workload）介绍</h2><p>工作负载是在 Kubernetes 上运行的应用程序。无论你的负载是单一组件还是由多个一同工作的组件构成，在 Kubernetes 中你 可以在一组 Pods 中运行它。 在 Kubernetes 中，Pod 代表的是集群上处于运行状态的一组容器。Pod 有确定的生命周期，如果该Pod所在的节点出现了致命的错误时，所有该节点的Pod都会失败。Kubernetes提供一些负载资源来替你管理一组Pod，让用户没有必要管理每个Pod。</p><p>Kubernetes提供以下几类工作负载：</p><ol><li><strong>无状态工作负载</strong>: 管理的Pod集合是相互等价的，需要的时候可以被替换。 <ul><li>Deployment</li><li>ReplicaSet</li><li>ReplicationController Deployment/RS/RC的区别，RS/RC能保证指定数量的pod在集群中运行，Deployment提供的升级，回滚，暂停恢复等功能。</li></ul></li><li><strong>有状态工作负载</strong>: 为每个 Pod 维护了一个唯一的ID, 能够保证 Pod 的顺序性和唯一性，每个Pod是不可替代的。可使用持久存储来保存服务产生的状态。 <ul><li>StatefulSet：StatefulSet 为它们的每个 Pod 维护了一个唯一的ID，该序列号会在 StatefulSet 存在的时间内保持不变，哪怕 Pod 被重启或者重新调度，也不会出现任何的改变。StatefulSet 引入了 PV 和 PVC 对象来持久存储服务产生的状态，Zookeeper、Kafka，etcd等。</li></ul></li><li><strong>守护进程工作负载</strong>: 保证每个节点上运行着这样一个守护进程 <ul><li>DaemonSet</li></ul></li><li><strong>批处理工作负载</strong>: 一次性的任务 <ul><li>Job</li><li>CronJob</li></ul></li></ol><h2 id="工作负载类型1-deployment" tabindex="-1"><a class="header-anchor" href="#工作负载类型1-deployment" aria-hidden="true">#</a> 工作负载类型1-Deployment</h2><p>Deployment是一组不具有唯一标识的多个Pod的集合：</p><ul><li>确保集群中有期望数量的Pod运行</li><li>提供多种升级策略以及一键回滚能力。</li><li>提供暂停/恢复的能力</li></ul><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230227115110.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>典型使用场景：Web Server等无状态应用</p><h3 id="deployment-语法" tabindex="-1"><a class="header-anchor" href="#deployment-语法" aria-hidden="true">#</a> Deployment 语法</h3><p><strong>Deployment 升级策略</strong>：</p><ul><li><strong>RollingUpdate</strong>: 滚动升级策略中可以配置以下两个参数 <ul><li>maxUnavailable 表示在更新过程中能够进入不可用状态的 Pod 的最大值；</li><li>maxSurge 表示能够额外创建的 Pod 个数</li><li>滚动更新的过程中是启动一个新的ReplicaSet，创建一部分新Pod，并缩减历史的ReplicaSet的数量，一直循环往复，以达到期望状态，步长由以上两个参数控制。</li></ul></li><li><strong>Recreate</strong>: 先将老的ReplicaSet期望实例数改成0，等所有Pod终止以后，再创建新的ReplicaSet</li><li><strong>RevisonHistoryLimit</strong>: 指定保留的历史ReplicaSet数量。</li><li><strong>Pause</strong>: 当Deployment暂停后，Deployment发生了改动，也不会被Controller同步，触发更新。</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>deployment
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
<span class="token key atrule">strategy</span><span class="token punctuation">:</span>
<span class="token key atrule">rollingUpdate</span><span class="token punctuation">:</span>
<span class="token key atrule">maxSurge</span><span class="token punctuation">:</span> <span class="token number">0</span>
<span class="token key atrule">maxUnavailable</span><span class="token punctuation">:</span> <span class="token number">1</span>
<span class="token key atrule">type</span><span class="token punctuation">:</span> RollingUpdate
<span class="token key atrule">selector</span><span class="token punctuation">:</span>
<span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
<span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
<span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment"># tells deployment to run 2 pods matching the template</span>
<span class="token key atrule">template</span><span class="token punctuation">:</span>
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
<span class="token key atrule">labels</span><span class="token punctuation">:</span>
<span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
<span class="token key atrule">containers</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
<span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>1.14.2
<span class="token key atrule">ports</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="deployment-常用操作" tabindex="-1"><a class="header-anchor" href="#deployment-常用操作" aria-hidden="true">#</a> Deployment 常用操作</h3><p><strong>创建Deployement</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl create deploy nginx-test <span class="token parameter variable">--image</span> nginx <span class="token parameter variable">--replicas</span><span class="token operator">=</span><span class="token number">3</span>
kubectl create –f nginx.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>查询Deployement</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl get deploy
NAME    READY      UP-TO-DATE         AVAILABLE        AGE
nginx           <span class="token number">1</span>/1               <span class="token number">1</span>                          <span class="token number">1</span>               17d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><ul><li>READY: 对应status.readyReplicas/spec.replicas</li><li>UP-TO-DATE:对应status.updatedReplicas, 表示根据新模板创建的pod数量</li><li>AVAILABLE: 对应status.availableReplicas, 表示在minReadySeconds Pod的Container没有重启的Running Pod数量。</li></ul></div><p><strong>更新Deployement</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl edit deploy/nginx
kubectl <span class="token builtin class-name">set</span> image deploy/nginx <span class="token assign-left variable">nginx</span><span class="token operator">=</span>nginx:1.9.1
kubectl apply <span class="token parameter variable">-f</span> nginx.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>监视Deployment滚动更新情况</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl rollout status deploy/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>查询升级历史</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl rollout history deploy/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>回滚</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl rollout undo deployment/nginx  --to-revision=2 #不指定的话默认回滚到上一个版本
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>暂停/恢复</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl rollout pause deployment/nginx
kubectl rollout pause deployment/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">Deployment 使用小结</p><ul><li>选择所需的升级策略，合理配置升级参数，例如maxUnavailable以及maxSurge</li><li>合理设置历史版本数量，系统默认情况下会保留10个历史版本。</li><li>回滚时，只有Deployment 模板部分会被回滚，手动/自动扩缩Deployment数量是不会被回滚的。</li><li>暂停过程中，模板更新不会触发Deployment滚动更新。</li></ul></div><h2 id="工作负载类型2-job-cronjob" tabindex="-1"><a class="header-anchor" href="#工作负载类型2-job-cronjob" aria-hidden="true">#</a> 工作负载类型2-Job/CronJob</h2><p>Job 主要处理一些短暂的一次性任务：</p><ul><li>保证指定数量Pod成功运行结束</li><li>支持并发执行</li><li>支持错误自动重试</li><li>支持暂停/恢复Job</li></ul><p>典型使用场景：</p><ul><li>计算以及训练任务, 如批量计算，AI训练任务等</li></ul><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230227125921.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>CronJob 主要处理周期性或者重复性的任务：</p><ul><li>基于Crontab格式的时间调度</li><li>可以暂停/恢复CronJob</li></ul><p>典型的使用场景：</p><ul><li>周期性的数据分析服务</li><li>周期性的资源回收服务</li></ul><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230227130007.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="job-cronjob-语法" tabindex="-1"><a class="header-anchor" href="#job-cronjob-语法" aria-hidden="true">#</a> Job/CronJob 语法</h3><p><strong>Job关键字段：</strong></p><ul><li>Parallelism: 在同一时间运行的最大的Pod的数量</li><li>Completions: 指定Job成功需要运行成功的Pod的数量</li><li>BackoffLimit: 重试次数，当超过该重试次数时，该Job标记为Failed</li><li>CompletionMode: 1.21引入，如果设置为Indexed，创建的<code>Pod annotation</code>会带上<code>batch.kubernetes.io/job-completion-index</code>，index值为<code>0~spec.completions-1</code>，并且仅当每index的pod都有一个成功的时候，这时Job才会被认为是成功的。controller会给pod中注入JOB_COMPLETION_INDEX的环境变量</li><li>Suspend: 1.21引入，等于true时，用户暂停了Job，controller会删除所有正在运行的Pod。</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> batch/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Job
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> pi
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
<span class="token key atrule">template</span><span class="token punctuation">:</span>
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
<span class="token key atrule">containers</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> pi
<span class="token key atrule">image</span><span class="token punctuation">:</span> perl
<span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;perl&quot;</span><span class="token punctuation">,</span>  <span class="token string">&quot;-Mbignum=bpi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-wle&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;print bpi(2000)&quot;</span><span class="token punctuation">]</span>
<span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Never
<span class="token key atrule">backoffLimit</span><span class="token punctuation">:</span> <span class="token number">4</span>
<span class="token key atrule">completions</span><span class="token punctuation">:</span> <span class="token number">1</span>
<span class="token key atrule">parallelism</span><span class="token punctuation">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>CronJob关键字段：</strong></p><ul><li>Schedule: 设置Job的周期策略</li><li>ConcurrencyPolicy: 指定 CronJob 创建的任务执行时发生重叠如何处理, Allow是允许并发执行任务, Forbid是不允许并发执行，Replace是会用新任务替换正在运行的任务。</li><li>startingDeadlineSeconds: 表示统计错过调度次数开始的时间,默认从上一次调度时间开始统计。</li><li>successfulJobsHistoryLimit，failedJobsHistoryLimit: 可以指定保留的成功和失败的任务个数。</li><li>Suspend: 是否暂停</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> batch/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> CronJob
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> hello
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
<span class="token key atrule">schedule</span><span class="token punctuation">:</span> <span class="token string">&quot;*/1 * * * *&quot;</span>
<span class="token key atrule">successfulJobsHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">3</span>
<span class="token key atrule">failedJobsHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">1</span>
<span class="token key atrule">concurrencyPolicy</span><span class="token punctuation">:</span> Allow
<span class="token key atrule">jobTemplate</span><span class="token punctuation">:</span>
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
<span class="token key atrule">template</span><span class="token punctuation">:</span>
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
<span class="token key atrule">containers</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> hello
<span class="token key atrule">image</span><span class="token punctuation">:</span> busybox
<span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent
<span class="token key atrule">command</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> /bin/sh
<span class="token punctuation">-</span> <span class="token punctuation">-</span>c
<span class="token punctuation">-</span> date; echo Hello from the Kubernetes cluster
<span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> OnFailure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="job-cronjob-常用操作" tabindex="-1"><a class="header-anchor" href="#job-cronjob-常用操作" aria-hidden="true">#</a> Job/CronJob 常用操作</h3><p><strong>创建CronJob</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl create cronjob hello <span class="token parameter variable">--image</span><span class="token operator">=</span>busybox <span class="token parameter variable">--schedule</span><span class="token operator">=</span><span class="token string">&quot;*/1 * * * *&quot;</span>
kubectl create –f cronjob.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>查询CronJob</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># kubectl get cronjob</span>
NAME    SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE
hello        */1 * * * *           False            <span class="token number">1</span>                57s                 73s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li>SUSPEND : 显示已经该Cronjob是否暂停</li><li>ACTIVE : 显示的是正在执行的Job的数量</li><li>LAST SCHEDULE: 显示的是上一次触发任务执行的时间</li></ul></blockquote><div class="hint-container info"><p class="hint-container-title">Job/CronJob 使用小结</p><ul><li>合理设置Job 的并发度，和所需的完成数量</li><li>合理设置失败重试次数，当前系统默认值为6</li><li>Job 中的Pod Restart Policy 只能为Never 或者 OnFailure</li><li>合理设置历史Job保留时间</li><li>合理设置CronJob的周期策略，以及并发策略</li><li>CronJob 当在一个时间窗内（上一次调度的时间点到现在）所错过的调度次数超过100次以后，那么就不会再启动这个任务了。</li></ul></div><h2 id="工作负载类型3-daemonset" tabindex="-1"><a class="header-anchor" href="#工作负载类型3-daemonset" aria-hidden="true">#</a> 工作负载类型3-DaemonSet</h2><h3 id="daemonset-概述" tabindex="-1"><a class="header-anchor" href="#daemonset-概述" aria-hidden="true">#</a> DaemonSet 概述</h3><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230227130908.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>DaemonSet（守护进程集）功能：</p><ul><li>确保每一个节点或者期望的节点上运行一个Pod</li><li>新增节点时自动部署一个Pod</li><li>移除节点时自动删除Pod</li></ul><p>典型使用场景：</p><ul><li>日志监控采集进程，如fluentd, icagent,</li><li>节点运维进程，等Node Problem Detector, OS-Operator-Agent</li><li>Kubernetes 必要运行组件，如Everest Driver, Calico等</li><li>Device Plugin：GPU Device Plugin，运行在GPU节点上</li></ul><h3 id="daemonset-语法" tabindex="-1"><a class="header-anchor" href="#daemonset-语法" aria-hidden="true">#</a> DaemonSet 语法</h3><p><strong>DaemonSet 升级策略</strong>：</p><ul><li>RollingUpdate:更新了DaemonSet的配置时，会自动删除老的Pod，删除完成后，创建新的Pods，并发滚动更新的节点数可以通过maxUnavailable控制.</li><li>OnDelete: 更新了DaemonSet的配置，不会自动删除并重建Pod; 通过删除Pod，触发Pod的更新。</li></ul><p>DaemonSet Template中RestartPolicy必须为Always</p><p><strong>RevisionHistoryLimit</strong>: 指定保留的历史revision数量。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> DaemonSet
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> fluentd<span class="token punctuation">-</span>elasticsearch
<span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system
<span class="token key atrule">labels</span><span class="token punctuation">:</span>
<span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> fluentd<span class="token punctuation">-</span>logging
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
<span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>
<span class="token key atrule">updateStrategy</span><span class="token punctuation">:</span>
<span class="token key atrule">rollingUpdate</span><span class="token punctuation">:</span>
<span class="token key atrule">maxUnavailable</span><span class="token punctuation">:</span> <span class="token number">10</span>
<span class="token key atrule">type</span><span class="token punctuation">:</span> RollingUpdate
<span class="token key atrule">selector</span><span class="token punctuation">:</span>
<span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> fluentd<span class="token punctuation">-</span>elasticsearch
<span class="token key atrule">template</span><span class="token punctuation">:</span>
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
<span class="token key atrule">labels</span><span class="token punctuation">:</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> fluentd<span class="token punctuation">-</span>elasticsearch
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
<span class="token key atrule">containers</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> fluentd<span class="token punctuation">-</span>elasticsearch
<span class="token key atrule">image</span><span class="token punctuation">:</span> quay.io/fluentd_elasticsearch/fluentd<span class="token punctuation">:</span>v2.5.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="daemonset-常用操作" tabindex="-1"><a class="header-anchor" href="#daemonset-常用操作" aria-hidden="true">#</a> DaemonSet 常用操作</h3><p><strong>创建DaemonSet</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl create –f daemonset.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>查询DaemonSet</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl get daemonset –nkube-system
NAME                 DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
everest-csi-driver   <span class="token number">1</span>                  <span class="token number">1</span>                   <span class="token number">1</span>               <span class="token number">1</span>                         133d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><ul><li>DESIRED: 对应status.desiredNumberScheduled,表示集群中需要部署ds pod的节点数量</li><li>CURRENT:对应status.currentNumberScheduled, 表示集群中已经有调度ds pod的节点数量</li><li>READY:对应status.NumberReady, 表示集群中已经有Running ds pod的节点数量</li><li>UP-TO-DATE:对应status.updatedNumberScheduled, 表示集群中已经启动最新的ds版本pod的节点数量</li><li>AVAILABLE: 对应status.numberAvailable, 表示集群中有running ds pod,并且在minReadySeconds容器没有重启的节点数量</li></ul></div><p><strong>更新DaemonSet</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl edit ds/fluentd-elasticsearch -n kube-system
kubectl set image ds/fluentd-elasticsearch fluentd-elasticsearch=quay.io/fluentd_elasticsearch/fluentd:v2.6.0 -n kube-system
kubectl apply -f https://k8s.io/examples/controllers/fluentd-daemonset-update.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>监视DaemonSet滚动更新情况</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl rollout status ds/fluentd-elasticsearch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>查询更新历史</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl rollout <span class="token function">history</span> ds/fluentd-elasticsearch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>回滚</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl rollout undo ds/fluentd-elasticsearch  --to-revision<span class="token operator">=</span><span class="token number">2</span> <span class="token comment">#不指定的话默认回滚到上一个版本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">DaemonSet使用小结</p><ul><li>合理设置DaemonSet升级策略</li><li>可以通过设置节点亲和性或者节点选择器来选择部分节点部署。</li><li>合理设置DaemonSet的RevisionHistoryLimit,默认值为10</li></ul></div>`,85),i=[t];function o(p,c){return s(),a("div",null,i)}const d=n(l,[["render",o],["__file","05_kubernetes_workload.html.vue"]]);export{d as default};
