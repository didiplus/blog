import{ab as n,G as s,H as a,ad as t}from"./framework-894cff3a.js";const e={},o=t(`<h1 id="云原生钻石课程-第2课-kubernetes-技术架构深度剖析" tabindex="-1"><a class="header-anchor" href="#云原生钻石课程-第2课-kubernetes-技术架构深度剖析" aria-hidden="true">#</a> 云原生钻石课程 | 第2课：Kubernetes 技术架构深度剖析</h1><h2 id="kubernetes总体架构" tabindex="-1"><a class="header-anchor" href="#kubernetes总体架构" aria-hidden="true">#</a> Kubernetes总体架构</h2><p>Kubernetes是Google开源的容器集群管理系统，它构建在容器技术之上，为容器化的应用提供资源调度，部署运行，服务发现，扩容缩容等一整套功能，本质上是基于容器技术的Micro-PaaS平台，Kubernetes的灵感来源于Google内部的Borg系统。</p><p>主要目的是将容器宿主机组成集群，统一进行资源调度，自动管理容器生命周期，提供跨节点服务发现和负载均衡；更好的支持微服务理念，划分、细分服务之间的边界，比如lablel、pod等概念的引入。目前主要的发展方向是可插件化和可扩展性进行引进，框架越来越轻量化，插件可定制化的东西也越来越多等。</p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228131503.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Kubernetes主要包括管控面和数据面，管控面主要涉及用户接触很少的用于管理K8s资源的核心组件，数据面主要是实际运行用户的业务。涉及的核心组件有API server、controller、kubelet等。</p><h2 id="kubernetes-核心组件" tabindex="-1"><a class="header-anchor" href="#kubernetes-核心组件" aria-hidden="true">#</a> Kubernetes 核心组件</h2><h3 id="控制面上的组件" tabindex="-1"><a class="header-anchor" href="#控制面上的组件" aria-hidden="true">#</a> 控制面上的组件</h3><h4 id="etcd" tabindex="-1"><a class="header-anchor" href="#etcd" aria-hidden="true">#</a> etcd</h4><p>etcd 是兼具一致性和高可用性的键值数据库，可以作为保存 Kubernetes 所有集群数据的后台数据库。etcd支持watch，这样组件很容易得到系统状态的变化，从而快速响应和协调工作</p><h4 id="kube-apiserver" tabindex="-1"><a class="header-anchor" href="#kube-apiserver" aria-hidden="true">#</a> kube-apiserver</h4><p>主要提供Kubernetes API，提供对Pods，Services，ReplicationController等对象的CRUD处理REST操作，验证它们，在etcd中更新相应的对象API不仅仅是面向最终用户的，同时也是面向工具和扩展开发者的，是开放生态系统的基础</p><h4 id="kube-scheduler" tabindex="-1"><a class="header-anchor" href="#kube-scheduler" aria-hidden="true">#</a> kube-scheduler</h4><p>通过访问Kubernetes中/binding API, Scheduler负责Pods在各个节点上的分配，Scheduler是插件式的，Kubernetes将来可以支持用户自定义的scheduler</p><h4 id="kube-controller-manager" tabindex="-1"><a class="header-anchor" href="#kube-controller-manager" aria-hidden="true">#</a> kube-controller-manager</h4><p>控制器循环监听集群中资源状态，按照预期状态对资源进行管理。每个控制器就是将对应的资源牵引到期望的状态，Kubernetes将来可以把这些控制器拆分并提供可插拔的组件</p><h4 id="cloud-controller-manager" tabindex="-1"><a class="header-anchor" href="#cloud-controller-manager" aria-hidden="true">#</a> cloud-controller-manager</h4><p>云控制器管理器是指嵌入特定云的控制逻辑的 控制平面组件。云控制器管理器允许您链接聚合到云提供商的应用编程接口中， 并分离出相互作用的组件与您的集群交互的组件。</p><h3 id="数据面节点上的组件" tabindex="-1"><a class="header-anchor" href="#数据面节点上的组件" aria-hidden="true">#</a> 数据面节点上的组件</h3><h4 id="kubelet" tabindex="-1"><a class="header-anchor" href="#kubelet" aria-hidden="true">#</a> Kubelet</h4><p>Kubelet管理pods和它们的容器、镜像、卷等</p><h4 id="kube-proxy" tabindex="-1"><a class="header-anchor" href="#kube-proxy" aria-hidden="true">#</a> Kube-proxy</h4><p>Kube-proxy是一个简单的网络代理和负载均衡器，它具体实现Service模型，每个Service都会在所有的Kube-Proxy节点上体现，根据Service的selector所覆盖的Pods, 对这些Pods做负载均衡来服务于Service的访问者</p><h4 id="容器运行时-container-runtime" tabindex="-1"><a class="header-anchor" href="#容器运行时-container-runtime" aria-hidden="true">#</a> 容器运行时（Container Runtime）</h4><p>容器运行环境是负责运行容器的软件。Kubernetes 支持多个容器运行环境: Docker、 containerd、CRI-O 以及任何实现 Kubernetes CRI (容器运行环境接口)。</p><h3 id="插件-addons" tabindex="-1"><a class="header-anchor" href="#插件-addons" aria-hidden="true">#</a> 插件（Addons）：</h3><p><strong>DNS</strong>：集群 DNS 是一个 DNS 服务器，和环境中的其他 DNS 服务器一起工作，它为 Kubernetes 服务提供 DNS 记录。Kubernetes 启动的容器自动将此 DNS 服务器包含在其 DNS 搜索列表中。</p><h2 id="controller控制器原理详解" tabindex="-1"><a class="header-anchor" href="#controller控制器原理详解" aria-hidden="true">#</a> controller控制器原理详解</h2><h3 id="kubernetes-controller-manager原理解析" tabindex="-1"><a class="header-anchor" href="#kubernetes-controller-manager原理解析" aria-hidden="true">#</a> Kubernetes Controller Manager原理解析</h3><p>Controller Manager 是集群内部的管理控制中心，负责统一管理与运行不同的 Controller ，实现对集群内的 Node、Pod 等所有资源的管理。比如当通过 Deployment 创建的某个 Pod 发生异常退出时，RS Controller 便会接受并处理该退出事件，并创建新的 Pod 来维持预期副本数。</p><p><strong>controller manager的作用</strong>：</p><p>k8s内部几乎每种特定资源都有特定的 Controller 维护管理，而 Controller Manager 的职责便是把所有的 Controller 聚合起来：</p><ul><li>提供基础设施降低 Controller 的实现复杂度</li><li>启动和维持 Controller 的正常运行，watch api-server，然后对不同的 Controller 分发事件通知。</li></ul><p>K8s中有几十种 Controller，这里列举一些相对重要的Controller：</p><ul><li><strong>部署控制器（Deployment Controller）</strong>：负责pod的滚动更新、回滚以及支持副本的水平扩容等。</li><li><strong>节点控制器（Node Controller）</strong>: 负责在节点出现故障时进行通知和响应。</li><li><strong>副本控制器（Replication Controller）</strong>: 负责为系统中的每个副本控制器对象维护正确数量的 Pod。</li><li><strong>端点控制器（Endpoints Controller）</strong>: 填充端点(Endpoints)对象(即加入 Service 与 Pod)。</li><li><strong>服务帐户和令牌控制器（Service Account &amp; Token Controllers）</strong>: 为新的命名空间创建默认帐户和 API 访问令牌</li></ul><h3 id="controller-工作流程" tabindex="-1"><a class="header-anchor" href="#controller-工作流程" aria-hidden="true">#</a> Controller 工作流程</h3><p>Controller Manager 主要提供了一个分发事件的能力，而不同的 Controller 只需要注册对应的 Handler 来等待接收和处理事件。</p><p>在 Controller Manager 的帮助下，Controller 的逻辑可以做的非常纯粹，只需要实现相应的 EventHandler 即可。以Deployment controller为例：</p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228134354.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>List &amp; Watch</strong>：</p><ul><li>Controller manager与api-server的通信主要通过两种方式：List 和 Watch。</li><li>List是短连接实现，用于获取该资源的所有object；</li><li>Watch是长连接实现，用于监听在List中获取的资源的变换。</li><li>api-server检测到资源产生变更时，会主动通知到Controller manager（利用分块传输编码）。</li></ul><p><strong>client-go</strong>：</p><ul><li>client-go实现统一管理每种 Controller 的List和Watch。</li><li>将收到的event事件放到缓存中，异步分发给每个 Controller 的注册的eventHandler。</li></ul><h3 id="controller中的eventhandler如何注册" tabindex="-1"><a class="header-anchor" href="#controller中的eventhandler如何注册" aria-hidden="true">#</a> Controller中的eventHandler如何注册？</h3><p>在<code>pkg/controller/deployment/deployment_controller.go</code> 的<code>NewDeploymentController</code>方法中，便包括了 Event Handler 的注册，对于 Deployment Controller 来说，只需要根据不同的事件实现不同的处理逻辑，便可以实现对相应资源的管理。</p><p>AddEventHandler被封装成ProcessListener并添加到数组中，并且调用了ProcessListener的run方法。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// NewDeploymentController creates a new DeploymentController.</span>
<span class="token keyword">func</span> <span class="token function">NewDeploymentController</span><span class="token punctuation">(</span>dInformer appsinformers<span class="token punctuation">.</span>DeploymentInformer<span class="token punctuation">,</span> rsInformer appsinformers<span class="token punctuation">.</span>ReplicaSetInformer<span class="token punctuation">,</span> podInformer coreinformers<span class="token punctuation">.</span>PodInformer<span class="token punctuation">,</span> client clientset<span class="token punctuation">.</span>Interface<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>DeploymentController<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">...</span> <span class="token operator">...</span>
   dInformer<span class="token punctuation">.</span><span class="token function">Informer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddEventHandler</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span>ResourceEventHandlerFuncs<span class="token punctuation">{</span>
      AddFunc<span class="token punctuation">:</span>    dc<span class="token punctuation">.</span>addDeployment<span class="token punctuation">,</span>
      UpdateFunc<span class="token punctuation">:</span> dc<span class="token punctuation">.</span>updateDeployment<span class="token punctuation">,</span>
      <span class="token comment">// This will enter the sync loop and no-op, because the deployment has been deleted from the store.</span>
      DeleteFunc<span class="token punctuation">:</span> dc<span class="token punctuation">.</span>deleteDeployment<span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>
   rsInformer<span class="token punctuation">.</span><span class="token function">Informer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddEventHandler</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span>ResourceEventHandlerFuncs<span class="token punctuation">{</span>
      AddFunc<span class="token punctuation">:</span>    dc<span class="token punctuation">.</span>addReplicaSet<span class="token punctuation">,</span>
      UpdateFunc<span class="token punctuation">:</span> dc<span class="token punctuation">.</span>updateReplicaSet<span class="token punctuation">,</span>
      DeleteFunc<span class="token punctuation">:</span> dc<span class="token punctuation">.</span>deleteReplicaSet<span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>
   podInformer<span class="token punctuation">.</span><span class="token function">Informer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddEventHandler</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span>ResourceEventHandlerFuncs<span class="token punctuation">{</span>
      DeleteFunc<span class="token punctuation">:</span> dc<span class="token punctuation">.</span>deletePod<span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>

   dc<span class="token punctuation">.</span>syncHandler <span class="token operator">=</span> dc<span class="token punctuation">.</span>syncDeployment
   dc<span class="token punctuation">.</span>enqueueDeployment <span class="token operator">=</span> dc<span class="token punctuation">.</span>enqueue

   dc<span class="token punctuation">.</span>dLister <span class="token operator">=</span> dInformer<span class="token punctuation">.</span><span class="token function">Lister</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   dc<span class="token punctuation">.</span>rsLister <span class="token operator">=</span> rsInformer<span class="token punctuation">.</span><span class="token function">Lister</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   dc<span class="token punctuation">.</span>podLister <span class="token operator">=</span> podInformer<span class="token punctuation">.</span><span class="token function">Lister</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   dc<span class="token punctuation">.</span>dListerSynced <span class="token operator">=</span> dInformer<span class="token punctuation">.</span><span class="token function">Informer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>HasSynced
   dc<span class="token punctuation">.</span>rsListerSynced <span class="token operator">=</span> rsInformer<span class="token punctuation">.</span><span class="token function">Informer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>HasSynced
   dc<span class="token punctuation">.</span>podListerSynced <span class="token operator">=</span> podInformer<span class="token punctuation">.</span><span class="token function">Informer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>HasSynced
   <span class="token keyword">return</span> dc<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="client-go-under-the-hood" tabindex="-1"><a class="header-anchor" href="#client-go-under-the-hood" aria-hidden="true">#</a> client-go under the hood</h3><p>kubernetes 在 github 上提供了一张 client-go 的架构图，从中可以看出，Controller 正是下半部分（CustomController）描述的内容，而client-go主要完成的是上半部分。</p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228134712.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>client-go组件</strong>:</p><ul><li><strong>Reflector</strong>：reflector用来watch特定的k8s API资源。具体的实现是通过ListAndWatch的方法，watch可以是k8s内建的资源或者是自定义的资源。当reflector通过watch API接收到有关新资源实例存在的通知时，它使用相应的列表API获取新创建的对象，并将其放入watchHandler函数内的Delta Fifo队列中。</li><li><strong>Informer</strong>：informer从Delta Fifo队列中弹出对象。执行此操作的功能是processLoop。base controller的作用是保存对象以供以后检索，并调用我们的控制器将对象传递给它。</li><li><strong>Indexer</strong>：索引器提供对象的索引功能。典型的索引用例是基于对象标签创建索引。Indexer可以根据多个索引函数维护索引。Indexer使用线程安全的数据存储来存储对象及其键。在Store中定义了一个名为MetaNamespaceKeyFunc的默认函数，该函数生成对象的键作为该对象的 / 组合。</li></ul><p><strong>自定义controller组件</strong>:</p><ul><li><strong>Informer reference</strong>：指的是Informer实例的引用，定义如何使用自定义资源对象。自定义控制器代码需要创建对应的Informer。</li><li><strong>Indexer reference</strong>: 自定义控制器对Indexer实例的引用。自定义控制器需要创建对应的Indexer。client-go中提供NewIndexerInformer函数可以创建Informer 和 Indexer。</li><li><strong>Resource Event Handlers</strong>：资源事件回调函数，当它想要将对象传递给控制器时，它将被调用。编写这些函数的典型模式是获取调度对象的key，并将该key排入工作队列以进行进一步处理。</li><li><strong>Workqueue</strong>：任务队列。编写资源事件处理程序函数以提取传递的对象的key并将其添加到任务队列。</li><li><strong>Process Item</strong>：处理任务队列中对象的函数， 这些函数通常使用Indexer引用或Listing包装器来重试与该key对应的对象。</li></ul><h2 id="list-watch机制原理详解" tabindex="-1"><a class="header-anchor" href="#list-watch机制原理详解" aria-hidden="true">#</a> list-watch机制原理详解</h2><h3 id="informer封装list-watch" tabindex="-1"><a class="header-anchor" href="#informer封装list-watch" aria-hidden="true">#</a> Informer封装list-watch</h3><p>K8s的informer模块封装list-watch API，用户只需要指定资源，编写事件处理函数，AddFunc,UpdateFunc和DeleteFunc等。</p><p>Informer是Client-go中的一个核心工具包。为了让Client-go更快地返回List/Get请求的结果、减少对Kubenetes API的直接调用，Informer被设计实现为一个依赖Kubernetes List/Watch API、可监听事件并触发回调函数的二级缓存工具包。</p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228135012.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="informer设计实现" tabindex="-1"><a class="header-anchor" href="#informer设计实现" aria-hidden="true">#</a> Informer设计实现</h3><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228135102.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>Informer组件</strong>：</p><ul><li>Controller 用于处理收到的事情，触发Processor中的回调函数</li><li>Reflector：通过Kubernetes Watch API监听resource下的所有事件</li><li>Lister：用来被调用List/Get方法</li><li>Processor：记录并触发回调函数</li><li>DeltaFIFO和LocalStore：DeltaFIFO和LocalStore是Informer的两级缓存。DeltaFIFO用来存储Watch API返回的各种事件，LocalStore是Lister的List/Get方法访问</li></ul><h3 id="kubernetes-核心机制list-watch" tabindex="-1"><a class="header-anchor" href="#kubernetes-核心机制list-watch" aria-hidden="true">#</a> Kubernetes 核心机制list-watch</h3><p>List-watch是K8S统一的异步消息处理机制，各组件间协同都采用该机制进行通信。List-watch机制保证了消息的实时性，可靠性，顺序性，性能等等，为声明式风格的API奠定了良好的基础，它是优雅的通信方式，是K8S 架构的精髓。对系统的性能、数据一致性起到关键性的作用。</p><p>list-watch操作主要完成以下几个事情：</p><ul><li>Watch核心数据存储是etcd，是典型的发布-订阅模式。但不直接访问etcd，通过apiserver发起请求，在组件启动时进行订阅。</li><li>可以带条件向apiserver发起的watch请求。例如，scheduler想要watch的是所有未被调度的Pod来进行调度操作；而kubelet只关心自己节点上的Pod列表。apiserver向etcd发起的watch是没有条件的，只能知道某个数据发生了变化或创建、删除，但不能过滤具体的值。也就是说对象数据的条件过滤必须在apiserver端而不是etcd端完成。</li><li>list是watch失败，数据太过陈旧后的弥补手段，这方面详见 基于list-watch的Kubernetes异步事件处理框架详解-客户端部分。list本身是一个简单的列表操作。</li></ul><p>Watch 体验，通过curl命令watch pods资源：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@xxx-xxx-0-148 xxx<span class="token punctuation">]</span><span class="token comment"># curl -i http://127.0.0.1:8080/api/v1/watch/services?watch=yes</span>
HTTP/1.1 <span class="token number">200</span> OK
Cache-Control: no-cache, private
Content-Type: application/json
Date: Wed, <span class="token number">16</span> Jun <span class="token number">2021</span> 09:38:27 GMT
Transfer-Encoding: chunked

<span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;ADDED&quot;</span>,<span class="token string">&quot;object&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;kind&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Service&quot;</span>,<span class="token string">&quot;apiVersion&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;v1&quot;</span>,<span class="token string">&quot;metadata&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;coredns&quot;</span>,<span class="token string">&quot;namespace&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;kube-system&quot;</span>,<span class="token string">&quot;selfLink&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;/api/v1/namespaces/kube-system/services/coredns&quot;</span>,<span class="token string">&quot;uid&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;ea75ccb1-fab5-44be-9382-ac36d18e39d9&quot;</span>,<span class="token string">&quot;resourceVersion&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;763&quot;</span>,<span class="token string">&quot;creationTimestamp&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;2021-06-15T08:29:36Z&quot;</span>,<span class="token string">&quot;labels&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;app&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;coredns&quot;</span>,<span class="token string">&quot;k8s-app&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;coredns&quot;</span>,<span class="token string">&quot;kubernetes.io/cluster-service&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;true&quot;</span>,<span class="token string">&quot;kubernetes.io/name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CoreDNS&quot;</span>,<span class="token string">&quot;release&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;cceaddon-coredns&quot;</span><span class="token punctuation">}</span>,<span class="token string">&quot;annotations&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;prometheus.io/port&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;9153&quot;</span>,<span class="token string">&quot;prometheus.io/scrape&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">}</span>,<span class="token string">&quot;managedFields&quot;</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;manager&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Go-http-client&quot;</span>,<span class="token string">&quot;operation&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Update&quot;</span>,<span class="token string">&quot;apiVersion&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;v1&quot;</span>,<span class="token string">&quot;time&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;2021-06-15T08:29:36Z&quot;</span>,<span class="token string">&quot;fieldsType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;FieldsV1&quot;</span>,<span class="token string">&quot;fieldsV1&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;f:metadata&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;f:annotations&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;.&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:prometheus.io/port&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:prometheus.io/scrape&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:labels&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;.&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:app&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:k8s-app&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:kubernetes.io/cluster-service&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:kubernetes.io/name&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:release&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:spec&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;f:clusterIP&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:ports&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;.&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;k:{<span class="token entity" title="\\&quot;">\\&quot;</span>port<span class="token entity" title="\\&quot;">\\&quot;</span>:53,<span class="token entity" title="\\&quot;">\\&quot;</span>protocol<span class="token entity" title="\\&quot;">\\&quot;</span>:<span class="token entity" title="\\&quot;">\\&quot;</span>TCP<span class="token entity" title="\\&quot;">\\&quot;</span>}&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;.&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:name&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:port&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:protocol&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:targetPort&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">&quot;k:{<span class="token entity" title="\\&quot;">\\&quot;</span>port<span class="token entity" title="\\&quot;">\\&quot;</span>:53,<span class="token entity" title="\\&quot;">\\&quot;</span>protocol<span class="token entity" title="\\&quot;">\\&quot;</span>:<span class="token entity" title="\\&quot;">\\&quot;</span>UDP<span class="token entity" title="\\&quot;">\\&quot;</span>}&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;.&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:name&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:port&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:protocol&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:targetPort&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">&quot;k:{<span class="token entity" title="\\&quot;">\\&quot;</span>port<span class="token entity" title="\\&quot;">\\&quot;</span>:8080,<span class="token entity" title="\\&quot;">\\&quot;</span>protocol<span class="token entity" title="\\&quot;">\\&quot;</span>:<span class="token entity" title="\\&quot;">\\&quot;</span>TCP<span class="token entity" title="\\&quot;">\\&quot;</span>}&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;.&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:name&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:port&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:protocol&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:targetPort&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:selector&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;.&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:app&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:k8s-app&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:sessionAffinity&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:type&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">&quot;spec&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;ports&quot;</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;dns&quot;</span>,<span class="token string">&quot;protocol&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;UDP&quot;</span>,<span class="token string">&quot;port&quot;</span>:53,<span class="token string">&quot;targetPort&quot;</span>:5353<span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;dns-tcp&quot;</span>,<span class="token string">&quot;protocol&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;TCP&quot;</span>,<span class="token string">&quot;port&quot;</span>:53,<span class="token string">&quot;targetPort&quot;</span>:5353<span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;health&quot;</span>,<span class="token string">&quot;protocol&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;TCP&quot;</span>,<span class="token string">&quot;port&quot;</span>:8080,<span class="token string">&quot;targetPort&quot;</span>:8080<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">&quot;selector&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;app&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;coredns&quot;</span>,<span class="token string">&quot;k8s-app&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;coredns&quot;</span><span class="token punctuation">}</span>,<span class="token string">&quot;clusterIP&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;10.247.3.10&quot;</span>,<span class="token string">&quot;type&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;ClusterIP&quot;</span>,<span class="token string">&quot;sessionAffinity&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;None&quot;</span><span class="token punctuation">}</span>,<span class="token string">&quot;status&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;loadBalancer&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;ADDED&quot;</span>,<span class="token string">&quot;object&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;kind&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Service&quot;</span>,<span class="token string">&quot;apiVersion&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;v1&quot;</span>,<span class="token string">&quot;metadata&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;kubernetes&quot;</span>,<span class="token string">&quot;namespace&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;default&quot;</span>,<span class="token string">&quot;selfLink&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;/api/v1/namespaces/default/services/kubernetes&quot;</span>,<span class="token string">&quot;uid&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;99e80360-402a-4368-8710-fa67a2c4a778&quot;</span>,<span class="token string">&quot;resourceVersion&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;157&quot;</span>,<span class="token string">&quot;creationTimestamp&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;2021-06-15T08:27:36Z&quot;</span>,<span class="token string">&quot;labels&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;component&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;apiserver&quot;</span>,<span class="token string">&quot;provider&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;kubernetes&quot;</span><span class="token punctuation">}</span>,<span class="token string">&quot;managedFields&quot;</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;manager&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;kube-apiserver&quot;</span>,<span class="token string">&quot;operation&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Update&quot;</span>,<span class="token string">&quot;apiVersion&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;v1&quot;</span>,<span class="token string">&quot;time&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;2021-06-15T08:27:36Z&quot;</span>,<span class="token string">&quot;fieldsType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;FieldsV1&quot;</span>,<span class="token string">&quot;fieldsV1&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;f:metadata&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;f:labels&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;.&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:component&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:provider&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:spec&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;f:clusterIP&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:ports&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;.&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;k:{<span class="token entity" title="\\&quot;">\\&quot;</span>port<span class="token entity" title="\\&quot;">\\&quot;</span>:443,<span class="token entity" title="\\&quot;">\\&quot;</span>protocol<span class="token entity" title="\\&quot;">\\&quot;</span>:<span class="token entity" title="\\&quot;">\\&quot;</span>TCP<span class="token entity" title="\\&quot;">\\&quot;</span>}&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;.&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:name&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:port&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:protocol&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:targetPort&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:sessionAffinity&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token string">&quot;f:type&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">&quot;spec&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;ports&quot;</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;https&quot;</span>,<span class="token string">&quot;protocol&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;TCP&quot;</span>,<span class="token string">&quot;port&quot;</span>:443,<span class="token string">&quot;targetPort&quot;</span>:5444<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">&quot;clusterIP&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;10.247.0.1&quot;</span>,<span class="token string">&quot;type&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;ClusterIP&quot;</span>,<span class="token string">&quot;sessionAffinity&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;None&quot;</span><span class="token punctuation">}</span>,<span class="token string">&quot;status&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;loadBalancer&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="watch-是如何实现的" tabindex="-1"><a class="header-anchor" href="#watch-是如何实现的" aria-hidden="true">#</a> Watch 是如何实现的？</h3><p>Watch的核心是长链接，通过HTTP 长链接接收apiserver发来的资源变更事件呢，秘诀是Chunked transfer encoding(分块传输编码)，它首次出现在HTTP/1.1。</p><p>HTTP 分块传输编码允许服务器为动态生成的内容维持 HTTP 持久链接。通常，持久链接需要服务器在开始发送消息体前发送Content-Length消息头字段，但是对于动态生成的内容来说，在内容创建完之前是不可知的。使用分块传输编码，数据分解成一系列数据块，并以一个或多个块发送，这样服务器可以发送数据而不需要预先知道发送内容的总大小。</p><p>当客户端调用watch API时，apiserver 在response的HTTP Header中设置Transfer-Encoding的值为chunked，表示采用分块传输编码，客户端收到该信息后，便和服务端该链接，并等待下一个数据块，即资源的事件信息，直到客户主动断链。</p><h3 id="list-watch-的设计理念" tabindex="-1"><a class="header-anchor" href="#list-watch-的设计理念" aria-hidden="true">#</a> List-Watch 的设计理念</h3><p>一个异步消息的系统时，对消息机制有至少如下四点要求 ：</p><ul><li><p><strong>消息可靠性</strong>：首先消息必须是可靠的，list和watch一起保证了消息的可靠性，避免因消息丢失而造成状态不一致场景。具体而言，list API可以查询当前的资源及其对应的状态(即期望的状态)，客户端通过拿期望的状态和实际的状态进行对比，纠正状态不一致的资源。Watch API和apiserver保持一个长链接，接收资源的状态变更事件并做相应处理。如果仅调用watch API，若某个时间点连接中断，就有可能导致消息丢失，所以需要通过list API解决消息丢失的问题。从另一个角度出发，我们可以认为list API获取全量数据，watch API获取增量数据。虽然仅仅通过轮询list API，也能达到同步资源状态的效果，但是存在开销大，实时性不足的问题。</p></li><li><p><strong>消息实时性</strong>：消息必须是实时的，list-watch机制下，每当apiserver的资源产生状态变更事件，都会将事件及时的推送给客户端，从而保证了消息的实时性。</p></li><li><p><strong>消息顺序性</strong>：消息的顺序性也是非常重要的，在并发的场景下，客户端在短时间内可能会收到同一个资源的多个事件，对于关注最终一致性的K8S来说，它需要知道哪个是最近发生的事件，并保证资源的最终状态如同最近事件所表述的状态一样。K8S在每个资源的事件中都带一个resourceVersion的标签，这个标签是递增的数字，所以当客户端并发处理同一个资源的事件时，它就可以对比resourceVersion来保证最终的状态和最新的事件所期望的状态保持一致。</p></li><li><p><strong>高性能</strong>：List-watch还具有高性能的特点，虽然仅通过周期性调用list API也能达到资源最终一致性的效果，但是周期性频繁的轮询大大的增大了开销，增加apiserver的压力。而watch作为异步消息通知机制，复用一条长链接，保证实时性的同时也保证了性能。</p></li></ul><h3 id="list-watch-实现机制" tabindex="-1"><a class="header-anchor" href="#list-watch-实现机制" aria-hidden="true">#</a> list-watch 实现机制</h3><ol><li>List-watch的API处理, kube-apiserver API注册代码<code>pkg/apiserver/api_installer.go</code><ul><li>rest.Storage对象会被转换为watcher和lister对象</li><li>提供list和watch服务的入口是同一个，在API接口中通过 GET /xxx/services?watch=ture来区分</li><li>API处理函数是统一通过ListResource完成</li></ul></li></ol><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>
<span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token operator">*</span>APIInstaller<span class="token punctuation">)</span> <span class="token function">registerResourceHandlers</span><span class="token punctuation">(</span>path <span class="token builtin">string</span><span class="token punctuation">,</span> storage rest<span class="token punctuation">.</span>Storage<span class="token punctuation">,</span> ws <span class="token operator">*</span>restful<span class="token punctuation">.</span>WebService<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>metav1<span class="token punctuation">.</span>APIResource<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">...</span> <span class="token operator">...</span>
<span class="token comment">// what verbs are supported by the storage, used to know what verbs we support per path</span>
creater<span class="token punctuation">,</span> isCreater <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token punctuation">(</span>rest<span class="token punctuation">.</span>Creater<span class="token punctuation">)</span>
namedCreater<span class="token punctuation">,</span> isNamedCreater <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token punctuation">(</span>rest<span class="token punctuation">.</span>NamedCreater<span class="token punctuation">)</span>
lister<span class="token punctuation">,</span> isLister <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token punctuation">(</span>rest<span class="token punctuation">.</span>Lister<span class="token punctuation">)</span>
<span class="token operator">...</span> <span class="token operator">...</span>
watcher<span class="token punctuation">,</span> isWatcher <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token punctuation">(</span>rest<span class="token punctuation">.</span>Watcher<span class="token punctuation">)</span>
<span class="token operator">...</span> <span class="token operator">...</span>
<span class="token keyword">case</span> <span class="token string">&quot;LIST&quot;</span><span class="token punctuation">:</span> <span class="token comment">// List all resources of a kind.</span>
   doc <span class="token operator">:=</span> <span class="token string">&quot;list objects of kind &quot;</span> <span class="token operator">+</span> kind
   <span class="token keyword">if</span> isSubresource <span class="token punctuation">{</span>
      doc <span class="token operator">=</span> <span class="token string">&quot;list &quot;</span> <span class="token operator">+</span> subresource <span class="token operator">+</span> <span class="token string">&quot; of objects of kind &quot;</span> <span class="token operator">+</span> kind
   <span class="token punctuation">}</span>
   handler <span class="token operator">:=</span> metrics<span class="token punctuation">.</span><span class="token function">InstrumentRouteFunc</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>Verb<span class="token punctuation">,</span> group<span class="token punctuation">,</span> version<span class="token punctuation">,</span> resource<span class="token punctuation">,</span> subresource<span class="token punctuation">,</span> requestScope<span class="token punctuation">,</span> metrics<span class="token punctuation">.</span>APIServerComponent<span class="token punctuation">,</span> deprecated<span class="token punctuation">,</span> removedRelease<span class="token punctuation">,</span> <span class="token function">restfulListResource</span><span class="token punctuation">(</span>lister<span class="token punctuation">,</span> watcher<span class="token punctuation">,</span> reqScope<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span>minRequestTimeout<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">if</span> enableWarningHeaders <span class="token punctuation">{</span>
      handler <span class="token operator">=</span> utilwarning<span class="token punctuation">.</span><span class="token function">AddWarningsHandler</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> warnings<span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
<span class="token operator">...</span> <span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>ListResource()的具体实现</li></ol><p>每次有一个watch的url请求过来，都会调用rw.Watch()创建一个watcher，然后使用serveWatch()来处理这个请求。watcher的生命周期是每个http请求的，这一点非常重要</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">ListResource</span><span class="token punctuation">(</span>r rest<span class="token punctuation">.</span>Lister<span class="token punctuation">,</span> rw rest<span class="token punctuation">.</span>Watcher<span class="token punctuation">,</span> scope <span class="token operator">*</span>RequestScope<span class="token punctuation">,</span> forceWatch <span class="token builtin">bool</span><span class="token punctuation">,</span> minRequestTimeout time<span class="token punctuation">.</span>Duration<span class="token punctuation">)</span> http<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span>
<span class="token operator">...</span> <span class="token operator">...</span>
      <span class="token keyword">if</span> opts<span class="token punctuation">.</span>Watch <span class="token operator">||</span> forceWatch <span class="token punctuation">{</span>
<span class="token operator">...</span> <span class="token operator">...</span>
         <span class="token keyword">defer</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
         watcher<span class="token punctuation">,</span> err <span class="token operator">:=</span> rw<span class="token punctuation">.</span><span class="token function">Watch</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>opts<span class="token punctuation">)</span>
         <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            scope<span class="token punctuation">.</span><span class="token function">err</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> w<span class="token punctuation">,</span> req<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
         <span class="token punctuation">}</span>
         requestInfo<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> request<span class="token punctuation">.</span><span class="token function">RequestInfoFrom</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
         metrics<span class="token punctuation">.</span><span class="token function">RecordLongRunning</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> requestInfo<span class="token punctuation">,</span> metrics<span class="token punctuation">.</span>APIServerComponent<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">serveWatch</span><span class="token punctuation">(</span>watcher<span class="token punctuation">,</span> scope<span class="token punctuation">,</span> outputMediaType<span class="token punctuation">,</span> req<span class="token punctuation">,</span> w<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
         <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
<span class="token operator">...</span> <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>响应http请求的过程serveWatch()的代码在/pkg/apiserver/watch.go里面</li></ol><p>watcher的结果channel中读取一个event对象，然后持续不断的编码写入到http response的流当中。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>
<span class="token comment">// serveWatch will serve a watch response.</span>
<span class="token comment">// TODO: the functionality in this method and in WatchServer.Serve is not cleanly decoupled.</span>
<span class="token keyword">func</span> <span class="token function">serveWatch</span><span class="token punctuation">(</span>watcher watch<span class="token punctuation">.</span>Interface<span class="token punctuation">,</span> scope <span class="token operator">*</span>RequestScope<span class="token punctuation">,</span> mediaTypeOptions …<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">...</span> <span class="token operator">...</span>
   server<span class="token punctuation">.</span><span class="token function">ServeHTTP</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> req<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>
<span class="token comment">// ServeHTTP serves a series of encoded events via HTTP with Transfer-Encoding: chunked</span>
<span class="token comment">// or over a websocket connection.</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>WatchServer<span class="token punctuation">)</span> <span class="token function">ServeHTTP</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">...</span> <span class="token operator">...</span>
   <span class="token keyword">for</span> <span class="token punctuation">{</span>
      <span class="token keyword">select</span> <span class="token punctuation">{</span>

      <span class="token keyword">case</span> event<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token operator">&lt;-</span>ch<span class="token punctuation">:</span>
         <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
            <span class="token comment">// End of results.</span>
            <span class="token keyword">return</span>
         <span class="token punctuation">}</span>
         metrics<span class="token punctuation">.</span>WatchEvents<span class="token punctuation">.</span><span class="token function">WithLabelValues</span><span class="token punctuation">(</span>kind<span class="token punctuation">.</span>Group<span class="token punctuation">,</span> kind<span class="token punctuation">.</span>Version<span class="token punctuation">,</span> kind<span class="token punctuation">.</span>Kind<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

         obj <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">Fixup</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>Object<span class="token punctuation">)</span>
         <span class="token keyword">if</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>EmbeddedEncoder<span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            <span class="token comment">// unexpected error</span>
            utilruntime<span class="token punctuation">.</span><span class="token function">HandleError</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;unable to encode watch object %T: %v&quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
         <span class="token punctuation">}</span>
<span class="token operator">...</span> <span class="token operator">...</span>         
         buf<span class="token punctuation">.</span><span class="token function">Reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="list-watch-实现机制总结" tabindex="-1"><a class="header-anchor" href="#list-watch-实现机制总结" aria-hidden="true">#</a> list-watch 实现机制总结</h3><p>list-watch客户端从调用到响应的整个流程：</p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228135441.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,89),p=[o];function c(u,l){return s(),a("div",null,p)}const r=n(e,[["render",c],["__file","02_deep_analysis_of_kubernetes.html.vue"]]);export{r as default};
