import{ab as p,G as c,H as r,E as n,N as a,ac as o,S as s,ad as t,W as e}from"./framework-894cff3a.js";const u={},d=n("h1",{id:"云原生第7课-kubernetes-网络与服务管理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#云原生第7课-kubernetes-网络与服务管理","aria-hidden":"true"},"#"),s(" 云原生第7课：Kubernetes 网络与服务管理")],-1),k=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"相关信息"),n("p",null,"本篇文章来自《华为云云原生王者之路训练营》黄金系列课程第7课，由华为云容器技术专家Luke主讲，详细介绍Kubernetes service和Kubernetes ingress的概念及使用场景。")],-1),v=t(`<p>Kubernetes工作负载部署应用服务，需要通过Service 或者 Ingress暴露给其他服务或者外部用户。</p><p>接下来的课程我们将为大家介绍 kubernetes Service 和 Ingress 基本概念和使用场景。</p><h2 id="kubernetes-service-概念及使用场景介绍" tabindex="-1"><a class="header-anchor" href="#kubernetes-service-概念及使用场景介绍" aria-hidden="true">#</a> Kubernetes service 概念及使用场景介绍</h2><h3 id="service基本概念" tabindex="-1"><a class="header-anchor" href="#service基本概念" aria-hidden="true">#</a> Service基本概念</h3><p>Kubernetes Service 定义了这样一种抽象：一个 Pod 的逻辑分组，一种可以访问它们的策略-----通常称为微服务。这一组 Pod 能够被 Service 访问到，通常是通过 Label Selector实现的。</p><p>介绍两个比较重要的概念：</p><ul><li>ClusterIP: kubernetes集群内部虚拟服务IP，由kube-proxy实现。</li><li>Endpoints: kubernetes 资源对象 Service实际服务后端的集合。手动创建或Endpoints controller 自动生成。</li></ul><h3 id="service的定义" tabindex="-1"><a class="header-anchor" href="#service的定义" aria-hidden="true">#</a> Service的定义</h3><p>Service定义的源数据：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
   <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
   <span class="token key atrule">type</span><span class="token punctuation">:</span> ClusterIP
   <span class="token key atrule">selector</span><span class="token punctuation">:</span>
      <span class="token key atrule">app</span><span class="token punctuation">:</span> MyApp
    <span class="token key atrule">port</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>
      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下图为通过图示方式展示Client端如何通过ClusterIP来访问后端的服务：</p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228100502.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="service类型1-services-without-selectors" tabindex="-1"><a class="header-anchor" href="#service类型1-services-without-selectors" aria-hidden="true">#</a> Service类型1：Services without selectors</h3><p>在没有添加Selectors的情况下，需要手动创建Endpoints资源对象，Endpoints资源对象要与Service同名，则会自动进行关联，关联之后Service的后端自动会添加为Endpoint定义的后端，还可以进行服务的转发。</p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228100759.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="service类型2-headless-service" tabindex="-1"><a class="header-anchor" href="#service类型2-headless-service" aria-hidden="true">#</a> Service类型2：Headless Service</h3><p>通过指定 Cluster IP（spec.clusterIP）的值为 “None” 来创建 Headless ServiceHeadless service 不会分配Cluster IP，kube-proxy 不会处理该类service, 可以通过域名解析直接访问backend pod 一跳直达，具体实现取决于DNS实现。</p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228101206.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="headless-service-应用场景" tabindex="-1"><a class="header-anchor" href="#headless-service-应用场景" aria-hidden="true">#</a> Headless Service 应用场景</h3><ul><li>自主选择权，client 可以自己来决定使用哪个Real Server，可以通过查询DNS来获取 Real Server 的信息</li><li>Headless Service 的对应的每一个 Endpoints，即每一个Pod，都会有对应的DNS域名，这样Pod之间就可以互相访问</li></ul><h3 id="发布服务-–-服务类型" tabindex="-1"><a class="header-anchor" href="#发布服务-–-服务类型" aria-hidden="true">#</a> 发布服务 – 服务类型</h3>`,21),m=n("li",null,[n("strong",null,"ClusterIP"),s(" :通过集群的内部 IP 暴露服务，选择该值，服务只能够在集群内部可以访问")],-1),h=n("li",null,[n("strong",null,"NodePort"),s(":通过每个 Node 上的 IP 和静态端口（NodePort）暴露服务。NodePort 服务会路由到 ClusterIP 服务，这个 ClusterIP 服务会自动创建。通过请求:，可以从集群的外部访问一个 NodePort 服务")],-1),b=n("li",null,[n("strong",null,"LoadBalancer"),s(":使用云提供商的负载均衡器，可以向外部暴露服务。外部的负载均衡器可以路由到 NodePort 服务和 ClusterIP 服务")],-1),g=n("strong",null,"ExternalName",-1),y={href:"http://foo.bar.example.com",target:"_blank",rel:"noopener noreferrer"},f=t(`<h4 id="nodeport-service" tabindex="-1"><a class="header-anchor" href="#nodeport-service" aria-hidden="true">#</a> NodePort Service</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
     <span class="token key atrule">app</span><span class="token punctuation">:</span> MyApp
  <span class="token key atrule">port</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>
      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>
      <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">3036</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228102631.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="loadbalancer-service" tabindex="-1"><a class="header-anchor" href="#loadbalancer-service" aria-hidden="true">#</a> LoadBalancer Service</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
     <span class="token key atrule">app</span><span class="token punctuation">:</span> MyApp
  <span class="token key atrule">port</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>
      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>
      <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">3036</span>
  <span class="token key atrule">clusterIp</span><span class="token punctuation">:</span> 10.0.171.239
  <span class="token key atrule">loadBalancerIP</span><span class="token punctuation">:</span> 78.11.24.19
  <span class="token key atrule">type</span><span class="token punctuation">:</span> LoadBalancer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228103128.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="externalname-service" tabindex="-1"><a class="header-anchor" href="#externalname-service" aria-hidden="true">#</a> ExternalName Service</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service
  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>ns
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> ExternalName
  <span class="token key atrule">externalName</span><span class="token punctuation">:</span> my.app.example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228103335.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>ExternalName Service 使用场景</strong></p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228103400.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="service背后的实现-kube-proxy" tabindex="-1"><a class="header-anchor" href="#service背后的实现-kube-proxy" aria-hidden="true">#</a> Service背后的实现：Kube-proxy</h3><p>每台机器上都运行一个 kube-proxy 服务，它监听 API server 中 service 和 endpoint 的变化情况，并通过 iptables 等来为服务配置负载均衡。</p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228103431.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="kubernetes-ingress概念及使用场景介绍" tabindex="-1"><a class="header-anchor" href="#kubernetes-ingress概念及使用场景介绍" aria-hidden="true">#</a> Kubernetes ingress概念及使用场景介绍</h2><h3 id="什么是ingress" tabindex="-1"><a class="header-anchor" href="#什么是ingress" aria-hidden="true">#</a> 什么是Ingress？</h3><p>Ingress 是从Kubernetes集群外部访问集群内部服务的入口。</p><p>通常情况下，service和pod仅可在集群内部网络中通过IP地址访问。所有到达边界路由器的流量或被丢弃或被转发到其他地方</p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228103556.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="ingress-的定义" tabindex="-1"><a class="header-anchor" href="#ingress-的定义" aria-hidden="true">#</a> Ingress 的定义</h3><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228103618.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ingress
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> name<span class="token punctuation">-</span>virtual<span class="token punctuation">-</span>host<span class="token punctuation">-</span>ingress
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">rules</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> foo.bar.com
    <span class="token key atrule">http</span><span class="token punctuation">:</span>
     <span class="token key atrule">paths</span><span class="token punctuation">:</span>
     <span class="token punctuation">-</span> <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix
       <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&#39;/&#39;</span>
       <span class="token key atrule">backend</span><span class="token punctuation">:</span>
         <span class="token key atrule">service</span><span class="token punctuation">:</span>
           <span class="token key atrule">name</span><span class="token punctuation">:</span> service1
           <span class="token key atrule">port</span><span class="token punctuation">:</span>
             <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> bar.foo.com
    <span class="token key atrule">http</span><span class="token punctuation">:</span>
     <span class="token key atrule">paths</span><span class="token punctuation">:</span>
     <span class="token punctuation">-</span> <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix
       <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/&quot;</span>
       <span class="token key atrule">backend</span><span class="token punctuation">:</span> 
         <span class="token key atrule">service</span><span class="token punctuation">:</span>
           <span class="token key atrule">name</span><span class="token punctuation">:</span> service2
           <span class="token key atrule">port</span><span class="token punctuation">:</span>
            <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ingress-controllers" tabindex="-1"><a class="header-anchor" href="#ingress-controllers" aria-hidden="true">#</a> Ingress controllers</h3><p>Ingress controller负责实现Ingress，是k8s Ingress能够生效的先决条件。为了使Ingress正常工作，集群中必须运行Ingress controller。</p><figure><img src="https://didiplus.oss-cn-hangzhou.aliyuncs.com/20230228104114.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,25);function x(_,P){const i=e("RouterLink"),l=e("ExternalLinkIcon");return c(),r("div",null,[d,k,n("p",null,[a(i,{to:"/cloud/huawei/CloudNative/06_kubernetes_persistent_data_volume.html"},{default:o(()=>[s("上节课")]),_:1}),s("我们介绍了kubernetes工作负载管理，包括Deployment 概念及使用场景、Daemonset 概念及使用场景和Job/Cronjob 概念及使用场景。")]),v,n("ul",null,[m,h,b,n("li",null,[g,s(":通过返回 CNAME 和它的值，可以将服务映射到 externalName 字段的内容（例如， "),n("a",y,[s("foo.bar.example.com"),a(l)]),s("）。没有任何类型代理被创建，这只有 Kubernetes 1.7 或更高版本的 kube-dns 才支持")])]),f])}const I=p(u,[["render",x],["__file","07_kubernetes_network_and_service_management.html.vue"]]);export{I as default};
