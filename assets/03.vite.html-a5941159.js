import{ab as c,G as l,H as r,E as n,S as s,N as a,ad as u,ac as p,W as t}from"./framework-11534bf9.js";const d={},k=n("h1",{id:"_03、如何在vue-vite中使用按需加载",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_03、如何在vue-vite中使用按需加载","aria-hidden":"true"},"#"),s(" 03、如何在vue+vite中使用按需加载")],-1),v=n("code",null,"vue3",-1),m=p(`<h2 id="安装组件按需加载依赖" tabindex="-1"><a class="header-anchor" href="#安装组件按需加载依赖" aria-hidden="true">#</a> 安装组件按需加载依赖</h2><p>按需加载使用到这个插件<code>unplugin-vue-components</code>,使用下面命令进行安装:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i unplugin-vue-components <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置组件按需加载插件" tabindex="-1"><a class="header-anchor" href="#配置组件按需加载插件" aria-hidden="true">#</a> 配置组件按需加载插件</h2><p>在<code>vite.config.js</code>文件在，配置使用该插件:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">&#39;unplugin-vue-components/vite&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">/* options */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">提示</p><p>使用了该插件，在使用其他模块的<code>vue</code>文件，就不需要<code>import</code>,直接使用即可。默认是从<code>components</code>目录引用的</p></div><h2 id="从ui库按需加载" tabindex="-1"><a class="header-anchor" href="#从ui库按需加载" aria-hidden="true">#</a> 从UI库按需加载</h2><p>以<code>Element Plus</code>在项目中实现按需加载。在<code>vite.config.js</code>中做如下修改:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">&#39;unplugin-vue-components/vite&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>ElementPlusResolver<span class="token punctuation">,</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unplugin-vue-components/resolvers&#39;</span>

<span class="token comment">// your plugin installation</span>
<span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),b={class:"hint-container info"},h=n("p",{class:"hint-container-title"},"主要",-1),g=n("p",null,[s("使用"),n("code",null,"Element Plus"),s("之前，先安装依赖"),n("code",null,"npm i -D Element Plus"),s("。")],-1),f={href:"https://github.com/antfu/unplugin-vue-components",target:"_blank",rel:"noopener noreferrer"},y=p(`<h2 id="按需自动加载api插件" tabindex="-1"><a class="header-anchor" href="#按需自动加载api插件" aria-hidden="true">#</a> 按需自动加载API插件</h2><p>为<code>Vite</code>、<code>Webpack</code>、<code>Rollup</code>和<code>esbuild</code>按需自动导入<code>API</code>。支持<code>TypeScript</code>。由<code>unplugin</code>提供动力。</p><ul><li>在没有使用<code>unplugin-auto-import</code>之前</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> doubled <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用<code>unplugin-auto-import</code>之后</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> doubled <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a> 安装依赖</h3><p>在使用之前安装依赖，执行如下命令:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> unplugin-auto-import
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置依赖" tabindex="-1"><a class="header-anchor" href="#配置依赖" aria-hidden="true">#</a> 配置依赖</h3><p>在<code>vite.config.js</code>中引用，并配置：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vite.config.ts</span>
<span class="token keyword">import</span> AutoImport <span class="token keyword">from</span> <span class="token string">&#39;unplugin-auto-import/vite&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">AutoImport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">// global imports to register</span>
        <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;vue-router&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;pinia&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),_={class:"hint-container info"},w=n("p",{class:"hint-container-title"},"提示",-1),x=n("p",null,"该插件只会把框架的API按需加载，对于自己自定义的API还是要手动加载的。",-1),j=n("code",null,"unplugin-auto-import",-1),I={href:"https://github.com/antfu/unplugin-auto-import",target:"_blank",rel:"noopener noreferrer"},R=p(`<h2 id="按需自动加载项目中的api插件" tabindex="-1"><a class="header-anchor" href="#按需自动加载项目中的api插件" aria-hidden="true">#</a> 按需自动加载项目中的API插件</h2><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><code>unplugin-auto-import</code> 的 <code>vite resolvers</code>，主要处理<code>vite</code>项目本身的<code>API</code>按需自动引入。</p></div><h3 id="基本用法🦖" tabindex="-1"><a class="header-anchor" href="#基本用法🦖" aria-hidden="true">#</a> 基本用法🦖</h3><p>1、安装依赖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i vite-auto-import-resolvers unplugin-auto-import <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、配置插件 在<code>vite.config.js</code>中引用，并配置：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vite.config.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span>
<span class="token keyword">import</span> AutoImports <span class="token keyword">from</span> <span class="token string">&#39;unplugin-auto-import/vite&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
	dirResolver<span class="token punctuation">,</span>
	DirResolverHelper
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-auto-import-resolvers&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token function">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token comment">// 该辅助插件也是必需的 👇</span>
		<span class="token function">DirResolverHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token function">AutoImports</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">dirResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>之后<code>src/composables</code>下模块的默认导出将在项目中自动按需引入。默认是<code>src/composables</code>这个目录。可以自行手动添加多个目录的</p></div><h3 id="进阶-🦕" tabindex="-1"><a class="header-anchor" href="#进阶-🦕" aria-hidden="true">#</a> 进阶 🦕</h3><p>强制前缀与后缀</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span>
<span class="token keyword">import</span> AutoImports <span class="token keyword">from</span> <span class="token string">&#39;unplugin-auto-import/vite&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
	dirResolver<span class="token punctuation">,</span>
	DirResolverHelper
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-auto-import-resolvers&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token function">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token function">DirResolverHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token function">AutoImports</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
				<span class="token function">dirResolver</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;use&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 强制前缀为 use</span>
				<span class="token function">dirResolver</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
					<span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;src/stores&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 目标目录，默认为 &#39;src/composables&#39;</span>
					<span class="token literal-property property">suffix</span><span class="token operator">:</span> <span class="token string">&#39;Store&#39;</span> <span class="token comment">// 强制后缀为 Store</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token punctuation">]</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>src/composables 下只有 use 开头的模块会被按需加载</p><p>src/stores 下只有 Store 结尾的模块会被按需加载</p></blockquote>`,12),A={class:"hint-container info"},C=n("p",{class:"hint-container-title"},"扩展知识",-1),P={href:"https://github.com/dishait/vite-auto-import-resolvers",target:"_blank",rel:"noopener noreferrer"};function V(E,B){const o=t("RouterLink"),e=t("ExternalLinkIcon"),i=t("BiliBili");return l(),r("div",null,[k,n("p",null,[s("接着上一个"),a(o,{to:"/frontend/vite/02.vite.html"},{default:u(()=>[s("文章")]),_:1}),s("，今天来聊一聊"),v,s("项目中如何使用按需加载。")]),m,n("div",b,[h,g,n("p",null,[s("更详细的组件按需加载内容查阅"),n("a",f,[s("unplugin-vue-components"),a(e)])])]),y,n("div",_,[w,x,n("p",null,[s("关于"),j,s("的更加多的用法请阅"),n("a",I,[s("官方手册"),a(e)])])]),R,a(i,{bvid:"BV163411L7Pq"}),n("div",A,[C,n("p",null,[s("更多用法查看"),n("a",P,[s("官网手册"),a(e)])])])])}const S=c(d,[["render",V],["__file","03.vite.html.vue"]]);export{S as default};
