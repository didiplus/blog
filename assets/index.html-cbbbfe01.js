import{ab as o,G as i,H as c,E as e,S as n,N as s,ac as p,ad as u,W as a}from"./framework-894cff3a.js";const d={},r=e("h1",{id:"概述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),n(" 概述")],-1),k={href:"https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",target:"_blank",rel:"noopener noreferrer"},v=u(`<p>相对的，节点中存在属性 <code>污点 taints</code>，使得节点可以排斥某些 Pod。</p><p>污点和容忍（taints and tolerations）成对工作，以确保 Pod 不会被调度到不合适的节点上。</p><ul><li>可以为节点增加污点（taints，一个节点可以有 0-N 个污点）</li><li>可以为 Pod 增加容忍（toleration，一个 Pod 可以有 0-N 个容忍）</li><li>如果节点上存在污点，则该节点不会接受任何不能容忍（tolerate）该污点的 Pod。</li></ul><h2 id="向节点添加污点" tabindex="-1"><a class="header-anchor" href="#向节点添加污点" aria-hidden="true">#</a> 向节点添加污点</h2><ul><li><p>执行 <code>kubectl taint</code> 命令，可向节点添加污点，如下所示：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl taint nodes node1 <span class="token assign-left variable">key</span><span class="token operator">=</span>value:NoSchedule
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令为节点 <code>node1</code> 添加了一个污点。污点是一个键值对，在本例中，污点的键为 <code>key</code>，值为 <code>value</code>，污点效果为 <code>NoSchedule</code>。此污点意味着 Kubernetes 不会向该节点调度任何 Pod，除非该 Pod 有一个匹配的容忍（toleration）</p></li><li><p>执行如下命令可以将本例中的污点移除：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl taint nodes node1 key:NoSchedule-
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="向-pod-添加容忍" tabindex="-1"><a class="header-anchor" href="#向-pod-添加容忍" aria-hidden="true">#</a> 向 Pod 添加容忍</h2><p>PodSpec 中有一个 <code>tolerations</code> 字段，可用于向 Pod 添加容忍。下面的两个例子中定义的容忍都可以匹配上例中的污点，包含这些容忍的 Pod 也都可以被调度到 <code>node1</code> 节点上：</p><ul><li>容忍1：<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;key&quot;</span>
  <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">&quot;Equal&quot;</span>
  <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">&quot;value&quot;</span>
  <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">&quot;NoSchedule&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>容忍2：<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;key&quot;</span>
  <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">&quot;Exists&quot;</span>
  <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">&quot;NoSchedule&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>下面这个 Pod 的例子中，使用了容忍：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">env</span><span class="token punctuation">:</span> test
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">containers</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent
  <span class="token key atrule">tolerations</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;example-key&quot;</span>
    <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">&quot;Exists&quot;</span>
    <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">&quot;NoSchedule&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="污点与容忍的匹配" tabindex="-1"><a class="header-anchor" href="#污点与容忍的匹配" aria-hidden="true">#</a> 污点与容忍的匹配</h2><p>当满足如下条件时，Kubernetes 认为容忍和污点匹配：</p><ul><li>键（key）相同</li><li>效果（effect）相同</li><li>污点的 <code>operator</code> 为： <ul><li><code>Exists</code> （此时污点中不应该指定 <code>value</code>）</li><li>或者 <code>Equal</code> （此时容忍的 <code>value</code> 应与污点的 <code>value</code> 相同）</li></ul></li></ul><p>如果不指定 <code>operator</code>，则其默认为 <code>Equal</code></p><div class="hint-container tip"><p class="hint-container-title">特殊情况</p><p>存在如下两种特殊情况：</p><ul><li><p>容忍中未定义 <code>key</code> 但是定义了 operator 为 <code>Exists</code>，Kubernetes 认为此容忍匹配所有的污点，如下所示：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">&quot;Exists&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>容忍中未定义 <code>effect</code> 但是定义了 <code>key</code>，Kubernetes 认为此容忍匹配所有 <code>effect</code>，如下所示：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;key&quot;</span>
  <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">&quot;Exists&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></div><p>支持的效果 <code>effect</code> 有：</p><ul><li><strong><code>NoSchedule</code></strong></li><li><strong><code>PreferNoSchedule</code></strong> 比 <code>NoSchedule</code> 更宽容一些，Kubernetes 将尽量避免将没有匹配容忍的 Pod 调度到该节点上，但是并不是不可以</li><li><strong><code>NoExecute</code></strong> 不能在节点上运行（如果已经运行，将被驱逐）</li></ul><p>一个节点上可以有多个污点，同时一个 Pod 上可以有多个容忍。Kubernetes 使用一种类似于过滤器的方法来处理多个节点和容忍：</p><ul><li>对于节点的所有污点，检查 Pod 上是否有匹配的容忍，如果存在匹配的容忍，则忽略该污点；</li><li>剩下的不可忽略的污点将对该 Pod 起作用</li></ul><p>例如：</p><ul><li>如果存在至少一个不可忽略的污点带有效果 <code>NoSchedule</code>，则 Kubernetes 不会将 Pod 调度到该节点上</li><li>如果没有不可忽略的污点带有效果 <code>NoSchedule</code>，但是至少存在一个不可忽略的污点带有效果 <code>PreferNoSchedule</code>，则 Kubernetes 将尽量避免将该 Pod 调度到此节点</li><li>如果存在至少一个忽略的污点带有效果 <code>NoExecute</code>，则： <ul><li>假设 Pod 已经在该节点上运行，Kubernetes 将从该节点上驱逐（evict）该 Pod</li><li>假设 Pod 尚未在该节点上运行，Kubernetes 将不会把 Pod 调度到该节点</li></ul></li></ul><p>例如，假设您给一个节点添加了三个污点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl taint nodes node1 <span class="token assign-left variable">key1</span><span class="token operator">=</span>value1:NoSchedule
kubectl taint nodes node1 <span class="token assign-left variable">key1</span><span class="token operator">=</span>value1:NoExecute
kubectl taint nodes node1 <span class="token assign-left variable">key2</span><span class="token operator">=</span>value2:NoSchedule
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时，有一个 Pod 带有两个容忍：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;key1&quot;</span>
  <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">&quot;Equal&quot;</span>
  <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">&quot;value1&quot;</span>
  <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">&quot;NoSchedule&quot;</span>
<span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;key1&quot;</span>
  <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">&quot;Equal&quot;</span>
  <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">&quot;value1&quot;</span>
  <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">&quot;NoExecute&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个案例中，Pod 上有两个容忍，匹配了节点的前两个污点，只有节点的第三个污点对该 Pod 来说不可忽略，该污点的效果为 <code>NoSchedule</code>：</p><ul><li>Kubernetes 不会将此 Pod 调度到该节点上</li><li>如果 Kubernetes 先将 Pod 调度到了该节点，后向该节点添加了第三个污点，则 Pod 将继续在该节点上运行而不会被驱逐（节点上带有 <code>NoExecute</code> 效果的污点已被 Pod 上的第二个容忍匹配，因此被忽略）</li></ul><p>通常，在带有效果 <code>NoExecute</code> 的污点被添加到节点时，节点上任何不容忍该污点的 Pod 将被立刻驱逐，而容忍该污点的 Pod 则不会被驱逐。</p><p>此外，带有效果 <code>NoExecute</code> 的污点还可以指定一个可选字段 <code>tolerationSeconds</code>，该字段指定了 Pod 在多长时间后被驱逐，例如：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;key1&quot;</span>
  <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">&quot;Equal&quot;</span>
  <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">&quot;value1&quot;</span>
  <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">&quot;NoExecute&quot;</span>
  <span class="token key atrule">tolerationSeconds</span><span class="token punctuation">:</span> <span class="token number">3600</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此例子中，如果 Pod 已经运行在节点上，再向节点增加此污点时，Pod 将在该节点上继续运行 3600 秒，然后才被驱逐。如果污点在此之间被移除，则 Pod 将不会被驱逐。</p>`,31);function m(b,y){const t=a("ExternalLinkIcon"),l=a("RouterLink");return i(),c("div",null,[r,e("blockquote",null,[e("p",null,[n("参考文档： Kubernetes 文档 "),e("a",k,[n("Taints and Tolerations"),s(t)])])]),e("p",null,[n("Pod 中存在属性 "),s(l,{to:"/learning/k8s-intermediate/config/assign-pod-node.html"},{default:p(()=>[n("Node selector / Node affinity")]),_:1}),n("，用于将 Pod 指定到合适的节点。")]),v])}const h=o(d,[["render",m],["__file","index.html.vue"]]);export{h as default};
