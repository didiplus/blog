import{ab as o,G as c,H as r,N as a,E as n,S as e,ac as u,ad as p,W as s}from"./framework-b31a425c.js";const d={},b=n("h1",{id:"_2-5、执行滚动更新",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-5、执行滚动更新","aria-hidden":"true"},"#"),e(" 2.5、执行滚动更新")],-1),k={href:"https://kubernetes.io/docs/tutorials/kubernetes-basics/update/update-intro/",target:"_blank",rel:"noopener noreferrer"},m=p('<h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h2><ul><li>使用 kubectl 执行 Rolling Update（滚动更新）</li></ul><h2 id="更新应用程序" tabindex="-1"><a class="header-anchor" href="#更新应用程序" aria-hidden="true">#</a> 更新应用程序</h2><p>用户期望应用程序始终可用，为此开发者/运维者在更新应用程序时要分多次完成。在 Kubernetes 中，这是通过 Rolling Update 滚动更新完成的。<strong>Rolling Update滚动更新</strong> 通过使用新版本的 Pod 逐步替代旧版本的 Pod 来实现 Deployment 的更新，从而实现零停机。新的 Pod 将在具有可用资源的 Node（节点）上进行调度。</p><blockquote><p>Kubernetes 更新多副本的 Deployment 的版本时，会逐步的创建新版本的 Pod，逐步的停止旧版本的 Pod，以便使应用一直处于可用状态。这个过程中，Service 能够监视 Pod 的状态，将流量始终转发到可用的 Pod 上。</p></blockquote><p>在上一个模块中，我们学习了将应用程序 Scale Up（扩容）为多个实例，这是执行更新而不影响应用程序可用性的前提（如果只有 1 个实例那还玩啥）。默认情况下，<strong>Rolling Update 滚动更新</strong> 过程中，Kubernetes 逐个使用新版本 Pod 替换旧版本 Pod（最大不可用 Pod 数为 1、最大新建 Pod 数也为 1）。这两个参数可以配置为数字或百分比。在Kubernetes 中，更新是版本化的，任何部署更新都可以恢复为以前的（稳定）版本。</p><h2 id="滚动更新概述" tabindex="-1"><a class="header-anchor" href="#滚动更新概述" aria-hidden="true">#</a> 滚动更新概述</h2><ol><li>原本 Service A 将流量负载均衡到 4 个旧版本的 Pod （当中的容器为 绿色）上</li></ol><figure><img src="https://kuboard.cn/assets/img/module_06_rollingupdates1.3f74dfba.svg" alt="Kubernetes教程：滚动更新1" tabindex="0" loading="lazy"><figcaption>Kubernetes教程：滚动更新1</figcaption></figure><ol start="2"><li><p>更新完 Deployment 部署文件中的镜像版本后，master 节点选择了一个 worker 节点，并根据新的镜像版本创建 Pod（紫色容器）。新 Pod 拥有唯一的新的 IP。同时，master 节点选择一个旧版本的 Pod 将其移除。</p><p>此时，Service A 将新 Pod 纳入到负载均衡中，将旧Pod移除</p></li></ol><figure><img src="https://kuboard.cn/assets/img/module_06_rollingupdates2.62afd5b1.svg" alt="Kubernetes教程：滚动更新2" tabindex="0" loading="lazy"><figcaption>Kubernetes教程：滚动更新2</figcaption></figure><ol start="3"><li>同步骤2，再创建一个新的 Pod 替换一个原有的 Pod</li></ol><figure><img src="https://kuboard.cn/assets/img/module_06_rollingupdates3.dc3754d9.svg" alt="Kubernetes教程：滚动更新3" tabindex="0" loading="lazy"><figcaption>Kubernetes教程：滚动更新3</figcaption></figure><ol start="4"><li>如此 Rolling Update 滚动更新，直到所有旧版本 Pod 均移除，新版本 Pod 也达到 Deployment 部署文件中定义的副本数，则滚动更新完成</li></ol><figure><img src="https://kuboard.cn/assets/img/module_06_rollingupdates4.05347706.svg" alt="Kubernetes教程：滚动更新4" tabindex="0" loading="lazy"><figcaption>Kubernetes教程：滚动更新4</figcaption></figure><p>滚动更新允许以下操作：</p><ul><li>将应用程序从准上线环境升级到生产环境（通过更新容器镜像）</li><li>回滚到以前的版本</li><li>持续集成和持续交付应用程序，无需停机</li></ul><h2 id="实战-更新-nginx-deployment" tabindex="-1"><a class="header-anchor" href="#实战-更新-nginx-deployment" aria-hidden="true">#</a> 实战：更新 nginx Deployment</h2>',18),g=n("p",null,[n("strong",null,"修改 nginx-deployment.yaml 文件")],-1),h=n("p",null,"修改文件中 image 镜像的标签，如下所示",-1),_=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{class:"language-yaml"},[n("code",null,[n("span",{class:"token key atrule"},"apiVersion"),n("span",{class:"token punctuation"},":"),e(` apps/v1
`),n("span",{class:"token key atrule"},"kind"),n("span",{class:"token punctuation"},":"),e(` Deployment
`),n("span",{class:"token key atrule"},"metadata"),n("span",{class:"token punctuation"},":"),e(`
  `),n("span",{class:"token key atrule"},"name"),n("span",{class:"token punctuation"},":"),e(" nginx"),n("span",{class:"token punctuation"},"-"),e(`deployment
  `),n("span",{class:"token key atrule"},"labels"),n("span",{class:"token punctuation"},":"),e(`
    `),n("span",{class:"token key atrule"},"app"),n("span",{class:"token punctuation"},":"),e(` nginx
`),n("span",{class:"token key atrule"},"spec"),n("span",{class:"token punctuation"},":"),e(`
  `),n("span",{class:"token key atrule"},"replicas"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token number"},"4"),e(`
  `),n("span",{class:"token key atrule"},"selector"),n("span",{class:"token punctuation"},":"),e(`
    `),n("span",{class:"token key atrule"},"matchLabels"),n("span",{class:"token punctuation"},":"),e(`
      `),n("span",{class:"token key atrule"},"app"),n("span",{class:"token punctuation"},":"),e(` nginx
  `),n("span",{class:"token key atrule"},"template"),n("span",{class:"token punctuation"},":"),e(`
    `),n("span",{class:"token key atrule"},"metadata"),n("span",{class:"token punctuation"},":"),e(`
      `),n("span",{class:"token key atrule"},"labels"),n("span",{class:"token punctuation"},":"),e(`
        `),n("span",{class:"token key atrule"},"app"),n("span",{class:"token punctuation"},":"),e(` nginx
    `),n("span",{class:"token key atrule"},"spec"),n("span",{class:"token punctuation"},":"),e(`
      `),n("span",{class:"token key atrule"},"containers"),n("span",{class:"token punctuation"},":"),e(`
      `),n("span",{class:"token punctuation"},"-"),e(),n("span",{class:"token key atrule"},"name"),n("span",{class:"token punctuation"},":"),e(` nginx
        `),n("span",{class:"token key atrule"},"image"),n("span",{class:"token punctuation"},":"),e(" nginx"),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"1.8"),e("   "),n("span",{class:"token comment"},"#使用镜像nginx:1.8替换原来的nginx:1.7.9"),e(`
        `),n("span",{class:"token key atrule"},"ports"),n("span",{class:"token punctuation"},":"),e(`
        `),n("span",{class:"token punctuation"},"-"),e(),n("span",{class:"token key atrule"},"containerPort"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token number"},"80"),e(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("p",null,[n("strong",null,"执行命令")],-1),y=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[e("kubectl apply "),n("span",{class:"token parameter variable"},"-f"),e(` nginx-deployment.yaml
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),f=n("p",null,[n("strong",null,"查看过程及结果")],-1),x=n("p",null,"执行命令，可观察到 pod 逐个被替换的过程。",-1),P=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"watch"),e(" kubectl get pods "),n("span",{class:"token parameter variable"},"-l"),e(),n("span",{class:"token assign-left variable"},"app"),n("span",{class:"token operator"},"="),e(`nginx
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),K=n("p",null,"~~呱唧呱唧，恭喜您，即将成为k8s的大神的您，已经迈进了您k8s的最重要的一步了--入门，那么接下来请再接再厉，继续征服k8s的高峰！！！",-1);function S(U,D){const t=s("AdSenseTitle"),l=s("ExternalLinkIcon"),i=s("Tabs");return c(),r("div",null,[b,a(t),n("p",null,[e("本文翻译自 Kubernetes "),n("a",k,[e("Performing a Rolling Update"),a(l)]),e(" ，并有所改写")]),m,a(i,{id:"101",data:[{title:"使用kubectl"}],active:0},{tab0:u(({title:N,value:R,isActive:A})=>[g,h,_,v,y,f,x,P]),_:1}),K])}const V=o(d,[["render",S],["__file","update.html.vue"]]);export{V as default};
