import{ab as d,G as c,H as p,E as e,S as a,N as n,ac as t,ad as s,W as o}from"./framework-894cff3a.js";const u={},r=e("h1",{id:"_3-3-7、容器组-配置poddisruptionbudget",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-3-7、容器组-配置poddisruptionbudget","aria-hidden":"true"},"#"),a(" 3.3.7、容器组_配置PodDisruptionBudget")],-1),b={href:"https://kubernetes.io/docs/tasks/run-application/configure-pdb/",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,"本文讲述了如何限制应用程序同时受到的毁坏数量，以便在集群管理员维护集群节点的同时，仍然可以保证应用的高可用性",-1),m=e("h2",{id:"前提",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#前提","aria-hidden":"true"},"#"),a(" 前提")],-1),v=e("li",null,"确认与集群管理员或者供应商确定，您所使用的 Kubernetes 集群支持 PodDisruptionBudget",-1),h=s('<h2 id="使用poddisruptionbudget保护应用程序" tabindex="-1"><a class="header-anchor" href="#使用poddisruptionbudget保护应用程序" aria-hidden="true">#</a> 使用PodDisruptionBudget保护应用程序</h2><ol><li>确定哪个应用程序需要使用 PodDisruptionBudget（PDB）保护</li><li>思考应用程序如何处理毁坏（disruption）</li><li>创建 PDB yaml 文件</li><li>从 yaml 文件创建 PDB 对象</li></ol><h2 id="确定需要pdb保护的应用" tabindex="-1"><a class="header-anchor" href="#确定需要pdb保护的应用" aria-hidden="true">#</a> 确定需要PDB保护的应用</h2><p>通常如下几种 Kubernetes 控制器创建的应用程序可以使用 PDB：</p><ul><li>Deployment</li><li>ReplicationController</li><li>ReplicaSet</li><li>StatefulSet</li></ul><p>PDB 中 <code>.spec.selector</code> 字段的内容必须与控制器中 <code>.spec.selector</code> 字段的内容相同。</p>',6),P={href:"https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#scale-subresource",target:"_blank",rel:"noopener noreferrer"},g=s('<p>也可以为那些不是通过上述控制器创建的 Pod（或者任意一组 Pod）设置 PDB，但是，这个时候存在一些限制条件，请参考 <a href="#%E4%BB%BB%E6%84%8F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%92%8C%E9%80%89%E6%8B%A9%E5%99%A8">任意控制器和选择器</a></p><h2 id="思考应用程序如何应对毁坏" tabindex="-1"><a class="header-anchor" href="#思考应用程序如何应对毁坏" aria-hidden="true">#</a> 思考应用程序如何应对毁坏</h2><p>当自愿毁坏发生时，在短时间内，您的应用程序最多可以容许多少个实例被终止。</p><ul><li>无状态的前端： <ul><li>关注点：不能让服务能力（serving capacity）降低超过 10%</li><li>解决方案：在 PDB 中配置 minAvailable 90%</li></ul></li><li>单实例有状态应用： <ul><li>关注点：未经同意不能关闭此应用程序</li><li>解决方案1： 不使用 PDB，并且容忍偶尔的停机</li><li>解决方案2： 在 PDB 中设置 maxUnavailable=0。与集群管理员达成一致（不是通过Kubernetes，而是邮件、电话或面对面），请集群管理员在终止应用之前与你沟通。当集群管理员联系你时，准备好停机时间，删除 PDB 以表示已准备好应对毁坏。并做后续处理</li></ul></li><li>多实例有状态应用，例如 consul、zookeeper、etcd： <ul><li>关注点：不能将实例数降低到某个数值，否则写入会失败</li><li>解决方案1： 在 PDB 中设置 maxUnavailable 为 1 （如果副本数会发生变化，可以使用此设置）</li><li>解决方案2： 在 PDB 中设置 minAvailable 为最低数量（例如，当总副本数为 5 时，设置为3）（可以同时容忍更多的毁坏数）</li></ul></li><li>可以重新开始的批处理任务： <ul><li>关注点：当发生自愿毁坏时，Job仍然需要完成其执行任务</li><li>解决方案： 不创建 PDB。Job 控制器将会创建一个 Pod 用于替换被毁坏的 Pod</li></ul></li></ul><h3 id="指定百分比时的舍入逻辑" tabindex="-1"><a class="header-anchor" href="#指定百分比时的舍入逻辑" aria-hidden="true">#</a> 指定百分比时的舍入逻辑</h3><p><code>minAvailable</code> 或 <code>maxUnavailable</code> 可以指定为整数或者百分比。</p><ul><li>当指定一个整数时，代表 Pod 的数量。例如，设置 <code>minAvailable</code> 为 10，则至少 10 个 Pod 必须始终可用，即便是在毁坏发生时</li><li>当指定一个百分比时（例如，<code>50%</code>），代表总 Pod 数量的一个百分比。例如，设置 <code>maxUnavailable</code> 为 <code>50%</code>，则最多可以有 50% 的 Pod 可以被毁坏</li></ul>',7),B=e("code",null,"minAvailable",-1),D=e("code",null,"50%",-1),y={href:"https://github.com/kubernetes/kubernetes/blob/23be9587a0f8677eb8091464098881df939c44a9/pkg/controller/disruption/disruption.go#L539",target:"_blank",rel:"noopener noreferrer"},_=s('<h3 id="定义poddisruptionbudget" tabindex="-1"><a class="header-anchor" href="#定义poddisruptionbudget" aria-hidden="true">#</a> 定义PodDisruptionBudget</h3><p><code>PodDisruptionBudget</code> 包含三个字段：</p><ul><li>标签选择器 <code>.spec.selector</code> 用于指定 PDB 适用的 Pod。此字段为必填</li><li><code>.spec.minAvailable</code>：当完成驱逐时，最少仍然要保留多少个 Pod 可用。该字段可以是一个整数，也可以是一个百分比</li><li><code>.spec.maxUnavailable</code>： 当完成驱逐时，最多可以有多少个 Pod 被终止。该字段可以是一个整数，也可以是一个百分比</li></ul><p>在一个 <code>PodDisruptionBudget</code> 中，只能指定 <code>maxUnavailable</code> 和 <code>minAvailable</code> 中的一个。 <code>maxUnavailable</code> 只能应用到那些有控制器的 Pod 上。下面的例子中，“期望的副本数” 是 PodDisruptionBudget 对应 Pod 的控制器的 <code>.spec.replicas</code> 字段：</p><p>例子1： <code>minAvailable</code> 为 5 时，只要 PodDisruptionBudget 的 <code>selector</code> 匹配的 Pod 中有超过 5 个仍然可用，就可以继续驱逐 Pod 例子2： <code>minAvailable</code> 为 30% 时，至少保证期望副本数的 30% 可用 例子3： <code>maxUnavailable</code> 为 5 时，最多可以有 5 个副本不可用（unthealthy） 例子4： <code>maxUnavailable</code> 为 30% 时，最多可以有期望副本数的 30% 不可用</p><p>通常，一个 PDB 对应一个控制器创建的 Pod，例如，Deployment、ReplicaSet或StatefulSet。</p>',6),x={class:"hint-container tip"},A=e("p",{class:"hint-container-title"},"注意",-1),f=s(`<p><code>maxUnavailable</code> 为 0%（或0）或者 <code>minAvailable</code> 为 100%（或与控制器的 <code>.spec.replicas</code> 相等）将阻止节点排空任务。按照 <code>PodDisruptionBudget</code> 的语义，这种做法是允许的。</p><p>下面是两个 PDB 的例子：</p><p>使用 minAvailable</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy/v1beta1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> PodDisruptionBudget
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> zk<span class="token punctuation">-</span>pdb
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">minAvailable</span><span class="token punctuation">:</span> <span class="token number">2</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
      <span class="token key atrule">app</span><span class="token punctuation">:</span> zookeeper
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 maxUnavailable</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy/v1beta1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> PodDisruptionBudget
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> zk<span class="token punctuation">-</span>pdb
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">maxUnavailable</span><span class="token punctuation">:</span> <span class="token number">1</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
      <span class="token key atrule">app</span><span class="token punctuation">:</span> zookeeper
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如，如果 <code>zk-pdb</code> 对象选择的 Pod 对应的 StatefulSet 的 <code>spec.replicas</code> 为 3，则两个 PDB 含义相同。推荐使用 <code>maxUnavailable</code> 这种形式的定义，因为当控制器的 <code>spec.replicas</code> 发生变化时，应用受到的影响更小一些。例如，将其副本数伸缩到 10，如果使用 <code>minAvailable=2</code> 这种形式，则可能会有 8 个 Pod 被毁坏。而如果使用 <code>maxUnavailable=1</code> 这种形式，应用程序将可以保存 9 个可用实例。</p><h2 id="创建pdb对象" tabindex="-1"><a class="header-anchor" href="#创建pdb对象" aria-hidden="true">#</a> 创建PDB对象</h2><p>使用 <code>kubectl apply -f mypdb.yaml</code> 命令可以创建或更新 PDB 对象</p><h2 id="检查pdb的状态" tabindex="-1"><a class="header-anchor" href="#检查pdb的状态" aria-hidden="true">#</a> 检查PDB的状态</h2><p>假设名称空间中实际没有与 <code>app: zookeeper</code> 匹配的 Pod，执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl get poddisruptionbudgets
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出结果为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>NAME      MIN-AVAILABLE   ALLOWED-DISRUPTIONS   AGE
zk-pdb    2               0                     7s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果存在 3 个匹配的 Pod，执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl get poddisruptionbudgets
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出结果为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>NAME      MIN-AVAILABLE   ALLOWED-DISRUPTIONS   AGE
zk-pdb    2               1                     7s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ALLOWED-DISRUPTIONS</code> 为非零证书，意味着 disruption 控制器已经匹配到了 Pod，计算了匹配的 Pod 数，并更新了 PDB 的状态。</p><p>执行命令，可以获得 PDB 的更多信息：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl get poddisruptionbudgets zk-pdb <span class="token parameter variable">-o</span> yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出结果如下所示：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy/v1beta1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> PodDisruptionBudget
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> 2019<span class="token punctuation">-</span>11<span class="token punctuation">-</span>19T021<span class="token punctuation">:</span>38<span class="token punctuation">:</span>26Z
  <span class="token key atrule">generation</span><span class="token punctuation">:</span> <span class="token number">1</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> zk<span class="token punctuation">-</span>pdb
…
<span class="token key atrule">status</span><span class="token punctuation">:</span>
  <span class="token key atrule">currentHealthy</span><span class="token punctuation">:</span> <span class="token number">3</span>
  <span class="token key atrule">desiredHealthy</span><span class="token punctuation">:</span> <span class="token number">3</span>
  <span class="token key atrule">disruptedPods</span><span class="token punctuation">:</span> <span class="token null important">null</span>
  <span class="token key atrule">disruptionsAllowed</span><span class="token punctuation">:</span> <span class="token number">1</span>
  <span class="token key atrule">expectedPods</span><span class="token punctuation">:</span> <span class="token number">3</span>
  <span class="token key atrule">observedGeneration</span><span class="token punctuation">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="任意控制器和选择器" tabindex="-1"><a class="header-anchor" href="#任意控制器和选择器" aria-hidden="true">#</a> 任意控制器和选择器</h2><p>如果您只配合 Kubernetes 内建控制器（Deployment、ReplicationController、ReplicaSet、StatefulSet）使用 PDB，您可以跳过此章节。</p><p>PDB 可以用于保护其他类型控制器（例如，“operator”）创建的 Pod，或者直接创建的 Pod（bare pod），但是有如下限定：</p><ul><li>只能使用 <code>.spec.minAvailable</code>，不能使用 <code>.spec.maxUnavailable</code></li><li><code>.spec.minAvailable</code> 字段中只能使用整型数字，不能使用百分比</li></ul><p>当配合内建控制器（Deployment、ReplicationController、ReplicaSet、StatefulSet）使用时，PDB 的标签选择器可以选择控制器创建 Pod 的一个子集或者超集。然而，当名称空间中有多个 PDB 时，必须十分小心，PDB 的标签选择器之间不能重叠。</p>`,28);function E(S,U){const l=o("ExternalLinkIcon"),i=o("RouterLink");return c(),p("div",null,[r,e("blockquote",null,[e("p",null,[a("参考文档： "),e("a",b,[a("Specifying a Disruption Budget for your Application"),n(l)])])]),k,m,e("ul",null,[e("li",null,[a("熟悉如何部署多副本的应用程序 "),n(i,{to:"/cloud/k8s/k8s-basics/scale.html"},{default:t(()=>[a("伸缩应用程序")]),_:1})]),e("li",null,[a("熟悉 "),n(i,{to:"/cloud/k8s/k8s-intermediate/workload/disruption.html"},{default:t(()=>[a("Pod Disruption")]),_:1}),a(" 的概念")]),v]),h,e("p",null,[a("自 Kubernetes v 1.15 开始，PDB支持激活了 "),e("a",P,[a("scale subresource"),n(l)]),a(" 的 custom controller.")]),g,e("p",null,[a("如果指定这些值为一个百分数，其计算结果可能不会正好是一个整数。例如，假设有 7 个 Pod，"),B,a(" 设置为 "),D,a("，你将很难判断，到底是 3 个还是 4 个 Pod 必须始终保持可用。Kubernetes 将向上舍入（round up to the nearest integer），因此，此处必须有 4 个 Pod 始终可用。可参考具体的 "),e("a",y,[a("Kubernetes 代码"),n(l)])]),_,e("div",x,[A,e("p",null,[a("PodDisruptionBudget 并不能真正确保指定数量（或百分比）的Pod始终保持可用。例如，当 Pod 数量已经为 PDB 中指定的最小数时，某一个节点可能意外宕机，导致 Pod 数量低于 PDB 中指定的数量。 PodDisruptionBudget 只能保护应用避免受到 "),n(i,{to:"/learning/k8s-intermediate/workload/disruption.html#%E8%87%AA%E6%84%BF%E7%9A%84%E5%92%8C%E9%9D%9E%E8%87%AA%E6%84%BF%E7%9A%84%E6%AF%81%E5%9D%8F"},{default:t(()=>[a("自愿毁坏")]),_:1}),a(" 的影响，而不是所有原因的毁坏。")])]),f])}const I=d(u,[["render",E],["__file","disruption-example.html.vue"]]);export{I as default};
