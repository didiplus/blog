import{ab as n,G as i,H as d,E as o,S as e,N as s,ac as c,ad as a,W as l}from"./framework-894cff3a.js";const r={},u=o("h1",{id:"条件化的污点-taintnodesbycondition",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#条件化的污点-taintnodesbycondition","aria-hidden":"true"},"#"),e(" 条件化的污点（TaintNodesByCondition）")],-1),_=o("p",null,[e("自 Kubernetes 1.12 开始，"),o("code",null,"TaintNodesByCondition"),e(" 这个特性进入 beta 阶段，此时节点控制器自动根据 Node Condition 为节点创建对应的污点。调度器则不去检查 Node conditions，而是检查节点的污点，因此 Node Condition 不再直接影响到调度程序。用户通过为 Pod 添加容忍，可以选择性地忽略节点的某些问题（以 Node Condition 呈现的问题）。")],-1),h=o("code",null,"TaintNodesByCondition",-1),b=o("code",null,"NoSchedule",-1),N=o("code",null,"TaintBasedEviction",-1),k=o("code",null,"NoExecute",-1),m=a("<p>自 Kubernetes 1.8 开始，DaemonSet Controller 自动为所有的 DaemonSet Pod 添加如下 <code>NoSchedule</code> 效果的容忍，以防止 DaemonSet 不能正常工作：</p><ul><li><code>node.kubernetes.io/memory-pressure</code></li><li><code>node.kubernetes.io/disk-pressure</code></li><li><code>node.kubernetes.io/out-of-disk</code>（只对关键 Pod 生效）</li><li><code>node.kubernetes.io/unschedulable</code>（不低于 Kubernetes 1.10）</li><li><code>node.kubernetes.io/network-unavailable</code>（只对 host network 生效）</li></ul>",2);function p(f,C){const t=l("RouterLink");return i(),d("div",null,[u,_,o("p",null,[h,e(" 这个特性只会为节点添加 "),b,e(" 效果的污点。"),N,e(" （Kubernetes 1.13 开始默认生效）则为节点添加 "),k,e(" 效果的污点，参考 "),s(t,{to:"/cloud/k8s/k8s-intermediate/config/taints-toleration/taint-based-evictions.html"},{default:c(()=>[e("TaintBasedEviction")]),_:1}),e("。")]),m])}const y=n(r,[["render",p],["__file","taint-nodes-by-condition.html.vue"]]);export{y as default};
