import{_ as t,c as e,o as a,U as i}from"./chunks/framework.y0HOe2qR.js";const P=JSON.parse('{"title":"图解网络介绍","description":"","frontmatter":{},"headers":[],"relativePath":"datacom/network/index.md","filePath":"datacom/network/index.md","lastUpdated":1705029886000}'),r={name:"datacom/network/index.md"},l=i('<h1 id="图解网络介绍" tabindex="-1">图解网络介绍 <a class="header-anchor" href="#图解网络介绍" aria-label="Permalink to &quot;图解网络介绍&quot;">​</a></h1><p>大家好，我是小林，是《图解网络》的作者，本站的内容都是整理于我<a href="https://mp.weixin.qq.com/s/FYH1I8CRsuXDSybSGY_AFA" target="_blank" rel="noreferrer">公众号</a>里的图解文章。</p><p>还没关注的朋友，可以微信搜索「<strong>小林coding</strong>」，关注我的公众号，<strong>后续最新版本的 PDF 会在我的公众号第一时间发布</strong>，而且会有更多其他系列的图解文章，比如操作系统、计算机组成、数据库、算法等等。</p><p>简单介绍下《图解网络》，整个内容共有 <strong><code>20W</code> 字 + <code>500</code> 张图</strong>，每一篇都自己手绘了很多图，目的也很简单，击破大家对于「八股文」的恐惧。</p><h2 id="适合什么群体" tabindex="-1">适合什么群体？ <a class="header-anchor" href="#适合什么群体" aria-label="Permalink to &quot;适合什么群体？&quot;">​</a></h2><p>《图解网络》写的网络知识主要是<strong>面向程序员</strong>的，因为小林本身也是个程序员，所以涉及到的知识主要是关于程序员日常工作或者面试的网络知识。</p><p>非常适合有一点网络基础，但是又不怎么扎实，或者知识点串不起来的同学，说白<strong>这本图解网络就是为了拯救半桶水的同学而出来的</strong>。</p><p>因为小林写的图解网络就四个字，<strong>通俗易懂</strong>！</p><p>相信你在看这本图解网络的时候，你心里的感受会是：</p><ul><li>「卧槽，原来是这样，大学老师教知识原来是这么理解」</li><li>「卧槽，我的网络知识串起来了」</li><li>「卧槽，我感觉面试稳了」</li><li>「卧槽，相见恨晚」</li></ul><p>当然，也适合面试突击网络知识时拿来看。图解网络里的内容基本是面试常见的协议，比如 HTTP、HTTPS、TCP、UDP、IP 等等，也有很多面试常问的问题，比如：</p><ul><li>TCP 为什么三次握手？四次挥手？</li><li>TCP 为什么要有 TIME_WAIT 状态？</li><li>TCP 为什么是可靠传输协议，而 UDP 不是？</li><li>键入网址到网页显示，期间发生了什么？</li><li>HTTPS 握手过程是怎样的？</li><li>….</li></ul><p>不敢说 100 % 涵盖了面试的网络问题，但是至少 90% 是有的，而且内容的深度应对大厂也是绰绰有余，有非常多的读者跑来感激小林的图解网络，帮助他们拿到了国内很多一线大厂的 offer。</p><h2 id="要怎么阅读" tabindex="-1">要怎么阅读？ <a class="header-anchor" href="#要怎么阅读" aria-label="Permalink to &quot;要怎么阅读？&quot;">​</a></h2><p>很诚恳的告诉你，《图解网络》不是教科书，而是我写的图解网络文章的整合，所以肯定是没有教科书那么细致和全面，当然也就不会有很多废话，都是直击重点，不绕弯，而且有的知识点书上看不到。</p><p>阅读的顺序可以不用从头读到尾，你可以根据你想要了解的知识点，通过本站的搜索功能，去看哪个章节的内容就好，可以随意阅读任何章节。</p><p>本站的左侧边拦就是《图解网络》的目录结构（别看篇章不多，每一章都是很长很长的文章哦 😆）：</p><ul><li><strong>网络基础篇</strong> 👇 <ul><li><a href="./../network/1_base/1.1.tcp_ip_model">TCP/IP 网络模型有哪几层？</a></li><li><a href="./../network/1_base/1.2.what_happen_url">键入网址到网页显示，期间发生了什么？</a></li><li><a href="./../network/1_base/1.3.how_os_deal_network_package">Linux 系统是如何收发网络包的？</a></li></ul></li><li><strong>HTTP 篇</strong> 👇 <ul><li><a href="./../network/2_http/2.1.http_interview">HTTP 常见面试题</a></li><li><a href="./../network/2_http/2.2.http_optimize">HTTP/1.1 如何优化？</a></li><li><a href="./../network/2_http/2.3.https_rsa">HTTPS RSA 握手解析</a></li><li><a href="./../network/2_http/2.4.https_ecdhe">HTTPS ECDHE 握手解析</a></li><li><a href="./../network/2_http/2.5.https_optimize">HTTPS 如何优化？</a></li><li><a href="./../network/2_http/2.6.http2">HTTP/2 牛逼在哪？</a></li><li><a href="./../network/2_http/2.7.http3">HTTP/3 强势来袭</a></li><li><a href="./../network/2_http/2.8.http_rpc">既然有 HTTP 协议，为什么还要有 RPC？</a></li><li><a href="./../network/2_http/2.9.http_websocket">既然有 HTTP 协议，为什么还要有 websocket？</a></li></ul></li><li><strong>TCP 篇</strong> 👇 <ul><li><a href="./../network/3_tcp/3.1.tcp_interview">TCP 三次握手与四次挥手面试题</a></li><li><a href="./../network/3_tcp/3.2.tcp_feature">TCP 重传、滑动窗口、流量控制、拥塞控制</a></li><li><a href="./../network/3_tcp/3.3.tcp_tcpdump">TCP 实战抓包分析</a></li><li><a href="./../network/3_tcp/3.4.tcp_queue">TCP 半连接队列和全连接队列</a></li><li><a href="./../network/3_tcp/3.5.tcp_optimize">如何优化 TCP?</a></li><li><a href="./../network/3_tcp/3.6.tcp_stream">如何理解是 TCP 面向字节流协议？</a></li><li><a href="./../network/3_tcp/3.7.isn_deff">为什么 TCP 每次建立连接时，初始化序列号都要不一样呢？</a></li><li><a href="./../network/3_tcp/3.8.syn_drop">SYN 报文什么时候情况下会被丢弃？</a></li><li><a href="./../network/3_tcp/3.10.out_of_order_fin">四次挥手中收到乱序的 FIN 包会如何处理？</a></li><li><a href="./../network/3_tcp/3.11.time_wait_recv_syn">在 TIME_WAIT 状态的 TCP 连接，收到 SYN 后会发生什么？</a></li><li><a href="./../network/3_tcp/3.12.tcp_down_and_crash">TCP 连接，一端断电和进程崩溃有什么区别？</a></li><li><a href="./../network/3_tcp/3.13.tcp_unplug_the_network_cable">拔掉网线后， 原本的 TCP 连接还存在吗？</a></li><li><a href="./../network/3_tcp/3.23.tcp_tw_reuse_close">tcp_tw_reuse 为什么默认是关闭的？</a></li><li><a href="./../network/3_tcp/3.15.tcp_http_keepalive">TCP Keepalive 和 HTTP Keep-Alive 是一个东西吗？</a></li><li><a href="./../network/3_tcp/3.16.tcp_problem">TCP 有什么缺陷？</a></li><li><a href="./../network/3_tcp/3.17.quic">如何基于 UDP 协议实现可靠传输？</a></li><li><a href="./../network/3_tcp/3.18.port">TCP 和 UDP 可以使用同一个端口吗？</a></li><li><a href="./../network/3_tcp/3.19.tcp_no_listen">服务端没有 listen，客户端发起连接建立，会发生什么？</a></li><li><a href="./../network/3_tcp/3.20.tcp_no_accpet">没有 accept，可以建立 TCP 连接吗？</a></li><li><a href="./../network/3_tcp/3.21.tcp_drop">用了 TCP 协议，数据一定不会丢吗？</a></li><li><a href="./../network/3_tcp/3.22.tcp_three_fin">TCP 四次挥手，可以变成三次吗？</a></li><li><a href="./../network/3_tcp/3.14.tcp_tls">HTTPS 中 TLS 和 TCP 能同时握手吗？</a></li></ul></li><li><strong>IP 篇</strong> 👇 <ul><li><a href="./../network/4_ip/4.1.ip_base">IP 基础知识全家桶</a></li><li><a href="./../network/4_ip/4.2.ping">ping 的工作原理</a></li><li><a href="./../network/4_ip/4.3.ping_lo">断网了，还能 ping 通 127.0.0.1 吗？</a></li></ul></li><li><strong>学习心得</strong> 👇 <ul><li><a href="./../network/5_learn/5.1.learn_network">计算机网络怎么学？</a></li><li><a href="./../network/5_learn/5.2.draw">画图经验分享</a></li></ul></li></ul><h2 id="质量如何" tabindex="-1">质量如何？ <a class="header-anchor" href="#质量如何" aria-label="Permalink to &quot;质量如何？&quot;">​</a></h2><p>图解网络的质量小林说的不算，读者说的算！</p><p>图解网络的第一个版本自去年发布以来，每隔一段时间，就会有不少的读者跑来感激小林。</p><p>他们说看了我的图解网络，轻松应对大厂的网络面试题，而且每次面试时问到网络问题，他们一点都不慌，甚至暗暗窃喜。</p><h2 id="有错误怎么办" tabindex="-1">有错误怎么办？ <a class="header-anchor" href="#有错误怎么办" aria-label="Permalink to &quot;有错误怎么办？&quot;">​</a></h2><p>小林是个手残党，时常写出错别字。</p><p>如果你在学习的过程中，<strong>如果你发现有任何错误或者疑惑的地方，欢迎你通过邮箱或者底部留言给小林</strong>，勘误邮箱：xiaolincoding@163.com</p><p>小林抽时间会逐个修正，然后发布新版本的图解网络 PDF，一起迭代出更好的图解网络！</p><p>新的图解文章都在公众号首发，别忘记关注了哦！如果你想加入百人技术交流群，扫码下方二维码回复「加群」。</p><p><img src="https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost3@main/%E5%85%B6%E4%BB%96/%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BB%8B%E7%BB%8D.png" alt=""></p>',28),o=[l];function p(n,_,c,h,s,T){return a(),e("div",null,o)}const d=t(r,[["render",p]]);export{P as __pageData,d as default};
